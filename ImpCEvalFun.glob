DIGEST 25a2538389f1a6dc3537ee4f5e0c6ca7
FLF.ImpCEvalFun
R521:535 Coq.omega.Omega <> <> lib
R553:567 Coq.Arith.Arith <> <> lib
R593:595 LF.Imp <> <> lib
R597:600 LF.Maps <> <> lib
def 706:716 <> ceval_step1
R724:728 LF.Imp <> state def
R736:738 LF.Imp <> com ind
R743:747 LF.Imp <> state def
R760:760 LF.ImpCEvalFun <> c var
R773:776 LF.Imp <> ::'SKIP' not
R789:790 LF.ImpCEvalFun <> st var
R799:803 LF.Imp <> ::x_'::='_x not
R818:825 LF.Maps <> t_update def
R833:837 LF.Imp <> aeval def
R839:840 LF.ImpCEvalFun <> st var
R827:828 LF.ImpCEvalFun <> st var
R854:857 LF.Imp <> ::x_';;'_x not
R883:893 LF.ImpCEvalFun <> ceval_step1 def
R895:896 LF.ImpCEvalFun <> st var
R912:922 LF.ImpCEvalFun <> ceval_step1 def
R924:926 LF.ImpCEvalFun <> st' var
R937:940 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R942:947 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R950:955 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R958:960 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R977:981 LF.Imp <> beval def
R983:984 LF.ImpCEvalFun <> st var
R1037:1047 LF.ImpCEvalFun <> ceval_step1 def
R1049:1050 LF.ImpCEvalFun <> st var
R1004:1014 LF.ImpCEvalFun <> ceval_step1 def
R1016:1017 LF.ImpCEvalFun <> st var
R1061:1066 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R1069:1072 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R1075:1078 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R1091:1092 LF.ImpCEvalFun <> st var
def 3084:3094 <> ceval_step2
R3102:3106 LF.Imp <> state def
R3114:3116 LF.Imp <> com ind
R3124:3126 Coq.Init.Datatypes <> nat ind
R3131:3135 LF.Imp <> state def
R3148:3148 LF.ImpCEvalFun <> i var
R3159:3159 Coq.Init.Datatypes <> O constr
R3164:3174 LF.Imp <> empty_state def
R3180:3180 Coq.Init.Datatypes <> S constr
R3198:3198 LF.ImpCEvalFun <> c var
R3213:3216 LF.Imp <> ::'SKIP' not
R3231:3232 LF.ImpCEvalFun <> st var
R3243:3247 LF.Imp <> ::x_'::='_x not
R3264:3271 LF.Maps <> t_update def
R3279:3283 LF.Imp <> aeval def
R3285:3286 LF.ImpCEvalFun <> st var
R3273:3274 LF.ImpCEvalFun <> st var
R3302:3305 LF.Imp <> ::x_';;'_x not
R3333:3343 LF.ImpCEvalFun <> ceval_step2 def
R3345:3346 LF.ImpCEvalFun <> st var
R3367:3377 LF.ImpCEvalFun <> ceval_step2 def
R3379:3381 LF.ImpCEvalFun <> st' var
R3397:3400 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3402:3407 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3410:3415 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3418:3420 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3439:3443 LF.Imp <> beval def
R3445:3446 LF.ImpCEvalFun <> st var
R3506:3516 LF.ImpCEvalFun <> ceval_step2 def
R3518:3519 LF.ImpCEvalFun <> st var
R3468:3478 LF.ImpCEvalFun <> ceval_step2 def
R3480:3481 LF.ImpCEvalFun <> st var
R3535:3540 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3543:3546 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3549:3552 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3571:3575 LF.Imp <> beval def
R3577:3578 LF.ImpCEvalFun <> st var
R3685:3686 LF.ImpCEvalFun <> st var
R3610:3620 LF.ImpCEvalFun <> ceval_step2 def
R3622:3623 LF.ImpCEvalFun <> st var
R3649:3659 LF.ImpCEvalFun <> ceval_step2 def
R3665:3665 LF.ImpCEvalFun <> c var
R3661:3663 LF.ImpCEvalFun <> st' var
def 4487:4497 <> ceval_step3
R4505:4509 LF.Imp <> state def
R4517:4519 LF.Imp <> com ind
R4527:4529 Coq.Init.Datatypes <> nat ind
R4554:4559 Coq.Init.Datatypes <> option ind
R4561:4565 LF.Imp <> state def
R4578:4578 LF.ImpCEvalFun <> i var
R4589:4589 Coq.Init.Datatypes <> O constr
R4594:4597 Coq.Init.Datatypes <> None constr
R4603:4603 Coq.Init.Datatypes <> S constr
R4621:4621 LF.ImpCEvalFun <> c var
R4636:4639 LF.Imp <> ::'SKIP' not
R4654:4657 Coq.Init.Datatypes <> Some constr
R4659:4660 LF.ImpCEvalFun <> st var
R4671:4675 LF.Imp <> ::x_'::='_x not
R4692:4695 Coq.Init.Datatypes <> Some constr
R4698:4705 LF.Maps <> t_update def
R4713:4717 LF.Imp <> aeval def
R4719:4720 LF.ImpCEvalFun <> st var
R4707:4708 LF.ImpCEvalFun <> st var
R4737:4740 LF.Imp <> ::x_';;'_x not
R4764:4774 LF.ImpCEvalFun <> ceval_step3 def
R4776:4777 LF.ImpCEvalFun <> st var
R4803:4806 Coq.Init.Datatypes <> Some constr
R4815:4825 LF.ImpCEvalFun <> ceval_step3 def
R4849:4852 Coq.Init.Datatypes <> None constr
R4857:4860 Coq.Init.Datatypes <> None constr
R4884:4887 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4889:4894 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4897:4902 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4905:4907 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4926:4930 LF.Imp <> beval def
R4932:4933 LF.ImpCEvalFun <> st var
R4993:5003 LF.ImpCEvalFun <> ceval_step3 def
R5005:5006 LF.ImpCEvalFun <> st var
R4955:4965 LF.ImpCEvalFun <> ceval_step3 def
R4967:4968 LF.ImpCEvalFun <> st var
R5022:5027 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5030:5033 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5036:5039 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5058:5062 LF.Imp <> beval def
R5064:5065 LF.ImpCEvalFun <> st var
R5234:5237 Coq.Init.Datatypes <> Some constr
R5239:5240 LF.ImpCEvalFun <> st var
R5093:5103 LF.ImpCEvalFun <> ceval_step3 def
R5105:5106 LF.ImpCEvalFun <> st var
R5137:5140 Coq.Init.Datatypes <> Some constr
R5149:5159 LF.ImpCEvalFun <> ceval_step3 def
R5165:5165 LF.ImpCEvalFun <> c var
R5187:5190 Coq.Init.Datatypes <> None constr
R5195:5198 Coq.Init.Datatypes <> None constr
R5511:5514 Coq.Init.Datatypes <> Some constr
R5535:5538 Coq.Init.Datatypes <> None constr
R5543:5546 Coq.Init.Datatypes <> None constr
not 5451:5451 <> ::'LETOPT'_x_'<=='_x_'IN'_x
def 5609:5618 <> ceval_step
R5626:5630 LF.Imp <> state def
R5638:5640 LF.Imp <> com ind
R5648:5650 Coq.Init.Datatypes <> nat ind
R5675:5680 Coq.Init.Datatypes <> option ind
R5682:5686 LF.Imp <> state def
R5699:5699 LF.ImpCEvalFun <> i var
R5710:5710 Coq.Init.Datatypes <> O constr
R5715:5718 Coq.Init.Datatypes <> None constr
R5724:5724 Coq.Init.Datatypes <> S constr
R5742:5742 LF.ImpCEvalFun <> c var
R5757:5760 LF.Imp <> ::'SKIP' not
R5775:5778 Coq.Init.Datatypes <> Some constr
R5780:5781 LF.ImpCEvalFun <> st var
R5792:5796 LF.Imp <> ::x_'::='_x not
R5813:5816 Coq.Init.Datatypes <> Some constr
R5819:5826 LF.Maps <> t_update def
R5834:5838 LF.Imp <> aeval def
R5840:5841 LF.ImpCEvalFun <> st var
R5828:5829 LF.ImpCEvalFun <> st var
R5858:5861 LF.Imp <> ::x_';;'_x not
R5878:5884 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5888:5892 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5912:5925 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5893:5902 LF.ImpCEvalFun <> ceval_step def
R5904:5905 LF.ImpCEvalFun <> st var
R5926:5935 LF.ImpCEvalFun <> ceval_step def
R5955:5958 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5960:5965 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5968:5973 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5976:5978 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5997:6001 LF.Imp <> beval def
R6003:6004 LF.ImpCEvalFun <> st var
R6063:6072 LF.ImpCEvalFun <> ceval_step def
R6074:6075 LF.ImpCEvalFun <> st var
R6026:6035 LF.ImpCEvalFun <> ceval_step def
R6037:6038 LF.ImpCEvalFun <> st var
R6091:6096 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6099:6102 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6105:6108 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6127:6131 LF.Imp <> beval def
R6133:6134 LF.ImpCEvalFun <> st var
R6243:6246 Coq.Init.Datatypes <> Some constr
R6248:6249 LF.ImpCEvalFun <> st var
R6155:6161 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6165:6169 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6189:6207 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6170:6179 LF.ImpCEvalFun <> ceval_step def
R6181:6182 LF.ImpCEvalFun <> st var
R6208:6217 LF.ImpCEvalFun <> ceval_step def
R6223:6223 LF.ImpCEvalFun <> c var
def 6278:6287 <> test_ceval
R6293:6297 LF.Imp <> state def
R6303:6305 LF.Imp <> com ind
R6319:6328 LF.ImpCEvalFun <> ceval_step def
R6333:6333 LF.ImpCEvalFun <> c var
R6330:6331 LF.ImpCEvalFun <> st var
R6348:6351 Coq.Init.Datatypes <> None constr
R6359:6362 Coq.Init.Datatypes <> None constr
R6368:6371 Coq.Init.Datatypes <> Some constr
R6379:6382 Coq.Init.Datatypes <> Some constr
R6384:6384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6389:6390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6395:6396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6401:6401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6385:6386 LF.ImpCEvalFun <> st var
R6388:6388 LF.Imp <> X def
R6391:6392 LF.ImpCEvalFun <> st var
R6394:6394 LF.Imp <> Y def
R6397:6398 LF.ImpCEvalFun <> st var
R6400:6400 LF.Imp <> Z def
def 6872:6879 <> pup_to_n
R6883:6885 LF.Imp <> com ind
R6906:6910 LF.Imp <> ::x_';;'_x not
R6893:6898 LF.Imp <> ::x_'::='_x not
R6905:6905 LF.Imp <> ::x_'::='_x not
R6892:6892 LF.Imp <> Y def
R6899:6902 LF.Imp <> ANum constr
R6911:6916 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6937:6944 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7008:7013 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6917:6919 LF.Imp <> BLe constr
R6931:6933 LF.Imp <> AId constr
R6935:6935 LF.Imp <> X def
R6922:6925 LF.Imp <> ANum constr
R6972:6978 LF.Imp <> ::x_';;'_x not
R6946:6950 LF.Imp <> ::x_'::='_x not
R6945:6945 LF.Imp <> Y def
R6951:6955 LF.Imp <> APlus constr
R6966:6968 LF.Imp <> AId constr
R6970:6970 LF.Imp <> X def
R6958:6960 LF.Imp <> AId constr
R6962:6962 LF.Imp <> Y def
R6980:6984 LF.Imp <> ::x_'::='_x not
R6979:6979 LF.Imp <> X def
R6985:6990 LF.Imp <> AMinus constr
R7001:7004 LF.Imp <> ANum constr
R6993:6995 LF.Imp <> AId constr
R6997:6997 LF.Imp <> X def
def 7026:7035 <> pup_to_n_1
R7087:7091 Coq.Init.Logic <> :type_scope:x_'='_x not
R7041:7050 LF.ImpCEvalFun <> test_ceval def
R7079:7086 LF.ImpCEvalFun <> pup_to_n def
R7053:7060 LF.Maps <> t_update def
R7074:7074 LF.Imp <> X def
R7062:7072 LF.Imp <> empty_state def
R7092:7095 Coq.Init.Datatypes <> Some constr
R7097:7097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7099:7100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7103:7104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7106:7106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 7353:7357 <> peven
R7361:7363 LF.Imp <> com ind
R7439:7443 LF.Imp <> ::x_';;'_x not
R7370:7375 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7396:7403 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7433:7438 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7376:7378 LF.Imp <> BLe constr
R7390:7392 LF.Imp <> AId constr
R7394:7394 LF.Imp <> X def
R7381:7384 LF.Imp <> ANum constr
R7405:7409 LF.Imp <> ::x_'::='_x not
R7404:7404 LF.Imp <> X def
R7410:7415 LF.Imp <> AMinus constr
R7426:7429 LF.Imp <> ANum constr
R7418:7420 LF.Imp <> AId constr
R7422:7422 LF.Imp <> X def
R7444:7447 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7468:7477 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7492:7497 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7512:7516 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7448:7450 LF.Imp <> BEq constr
R7462:7464 LF.Imp <> AId constr
R7466:7466 LF.Imp <> X def
R7453:7456 LF.Imp <> ANum constr
R7479:7484 LF.Imp <> ::x_'::='_x not
R7491:7491 LF.Imp <> ::x_'::='_x not
R7478:7478 LF.Imp <> Z def
R7485:7488 LF.Imp <> ANum constr
R7499:7504 LF.Imp <> ::x_'::='_x not
R7511:7511 LF.Imp <> ::x_'::='_x not
R7498:7498 LF.Imp <> Z def
R7505:7508 LF.Imp <> ANum constr
def 7528:7535 <> peven_11
R7584:7588 Coq.Init.Logic <> :type_scope:x_'='_x not
R7540:7549 LF.ImpCEvalFun <> test_ceval def
R7579:7583 LF.ImpCEvalFun <> peven def
R7552:7559 LF.Maps <> t_update def
R7573:7573 LF.Imp <> X def
R7561:7571 LF.Imp <> empty_state def
R7589:7592 Coq.Init.Datatypes <> Some constr
R7594:7594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7596:7597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7599:7600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7602:7602 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 7639:7646 <> peven_10
R7695:7699 Coq.Init.Logic <> :type_scope:x_'='_x not
R7651:7660 LF.ImpCEvalFun <> test_ceval def
R7690:7694 LF.ImpCEvalFun <> peven def
R7663:7670 LF.Maps <> t_update def
R7684:7684 LF.Imp <> X def
R7672:7682 LF.Imp <> empty_state def
R7700:7703 Coq.Init.Datatypes <> Some constr
R7705:7705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7707:7708 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7710:7711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7713:7713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 8101:8117 <> ceval_step__ceval
R8143:8143 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8182:8192 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8194:8196 LF.Imp <> ::x_'/'_x_'\\'_x not
R8199:8202 LF.Imp <> ::x_'/'_x_'\\'_x not
R8193:8193 LF.ImpCEvalFun <> c var
R8197:8198 LF.ImpCEvalFun <> st var
R8203:8205 LF.ImpCEvalFun <> st' var
R8144:8150 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8152:8153 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8171:8173 Coq.Init.Logic <> :type_scope:x_'='_x not
R8154:8163 LF.ImpCEvalFun <> ceval_step def
R8170:8170 LF.ImpCEvalFun <> i var
R8168:8168 LF.ImpCEvalFun <> c var
R8165:8166 LF.ImpCEvalFun <> st var
R8174:8177 Coq.Init.Datatypes <> Some constr
R8179:8181 LF.ImpCEvalFun <> st' var
R8584:8589 LF.Imp <> E_Skip constr
R8584:8589 LF.Imp <> E_Skip constr
R8616:8620 LF.Imp <> E_Ass constr
R8616:8620 LF.Imp <> E_Ass constr
R8672:8681 LF.ImpCEvalFun <> ceval_step def
R8672:8681 LF.ImpCEvalFun <> ceval_step def
R8773:8777 LF.Imp <> E_Seq constr
R8773:8777 LF.Imp <> E_Seq constr
R8992:8996 LF.Imp <> beval def
R8992:8996 LF.Imp <> beval def
R9055:9062 LF.Imp <> E_IfTrue constr
R9055:9062 LF.Imp <> E_IfTrue constr
R9168:9176 LF.Imp <> E_IfFalse constr
R9168:9176 LF.Imp <> E_IfFalse constr
R9271:9275 LF.Imp <> beval def
R9271:9275 LF.Imp <> beval def
R9338:9347 LF.ImpCEvalFun <> ceval_step def
R9338:9347 LF.ImpCEvalFun <> ceval_step def
R9415:9425 LF.Imp <> E_WhileTrue constr
R9415:9425 LF.Imp <> E_WhileTrue constr
R9683:9694 LF.Imp <> E_WhileFalse constr
R9683:9694 LF.Imp <> E_WhileFalse constr
prf 10213:10227 <> ceval_step_more
R10263:10268 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10298:10303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10322:10324 Coq.Init.Logic <> :type_scope:x_'='_x not
R10304:10313 LF.ImpCEvalFun <> ceval_step def
R10320:10321 LF.ImpCEvalFun <> i2 var
R10318:10318 LF.ImpCEvalFun <> c var
R10315:10316 LF.ImpCEvalFun <> st var
R10325:10328 Coq.Init.Datatypes <> Some constr
R10330:10332 LF.ImpCEvalFun <> st' var
R10287:10289 Coq.Init.Logic <> :type_scope:x_'='_x not
R10269:10278 LF.ImpCEvalFun <> ceval_step def
R10285:10286 LF.ImpCEvalFun <> i1 var
R10283:10283 LF.ImpCEvalFun <> c var
R10280:10281 LF.ImpCEvalFun <> st var
R10290:10293 Coq.Init.Datatypes <> Some constr
R10295:10297 LF.ImpCEvalFun <> st' var
R10257:10260 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R10255:10256 LF.ImpCEvalFun <> i1 var
R10261:10262 LF.ImpCEvalFun <> i2 var
R10537:10540 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R10537:10540 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R10786:10795 LF.ImpCEvalFun <> ceval_step def
R10786:10795 LF.ImpCEvalFun <> ceval_step def
R11123:11127 LF.Imp <> beval def
R11123:11127 LF.Imp <> beval def
R11250:11254 LF.Imp <> beval def
R11250:11254 LF.Imp <> beval def
R11295:11304 LF.ImpCEvalFun <> ceval_step def
R11295:11304 LF.ImpCEvalFun <> ceval_step def
prf 11806:11822 <> ceval__ceval_step
R11861:11870 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11871:11877 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11879:11880 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11898:11900 Coq.Init.Logic <> :type_scope:x_'='_x not
R11881:11890 LF.ImpCEvalFun <> ceval_step def
R11897:11897 LF.ImpCEvalFun <> i var
R11895:11895 LF.ImpCEvalFun <> c var
R11892:11893 LF.ImpCEvalFun <> st var
R11901:11904 Coq.Init.Datatypes <> Some constr
R11906:11908 LF.ImpCEvalFun <> st' var
R11849:11851 LF.Imp <> ::x_'/'_x_'\\'_x not
R11854:11857 LF.Imp <> ::x_'/'_x_'\\'_x not
R11848:11848 LF.ImpCEvalFun <> c var
R11852:11853 LF.ImpCEvalFun <> st var
R11858:11860 LF.ImpCEvalFun <> st' var
R12076:12078 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12072:12074 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12076:12078 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12072:12074 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12101:12110 LF.ImpCEvalFun <> ceval_step def
R12120:12122 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12101:12110 LF.ImpCEvalFun <> ceval_step def
R12120:12122 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12177:12179 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12148:12162 LF.ImpCEvalFun <> ceval_step_more thm
R12177:12179 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12148:12162 LF.ImpCEvalFun <> ceval_step_more thm
R12246:12260 LF.ImpCEvalFun <> ceval_step_more thm
R12246:12260 LF.ImpCEvalFun <> ceval_step_more thm
R12342:12344 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12313:12327 LF.ImpCEvalFun <> ceval_step_more thm
R12342:12344 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12313:12327 LF.ImpCEvalFun <> ceval_step_more thm
R12425:12427 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12425:12427 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12489:12491 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12489:12491 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12620:12622 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12616:12618 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12620:12622 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12616:12618 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12658:12667 LF.ImpCEvalFun <> ceval_step def
R12676:12678 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12658:12667 LF.ImpCEvalFun <> ceval_step def
R12676:12678 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12733:12735 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12704:12718 LF.ImpCEvalFun <> ceval_step_more thm
R12733:12735 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12704:12718 LF.ImpCEvalFun <> ceval_step_more thm
R12793:12807 LF.ImpCEvalFun <> ceval_step_more thm
R12793:12807 LF.ImpCEvalFun <> ceval_step_more thm
R12889:12891 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12860:12874 LF.ImpCEvalFun <> ceval_step_more thm
R12889:12891 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12860:12874 LF.ImpCEvalFun <> ceval_step_more thm
prf 12976:13004 <> ceval_and_ceval_step_coincide
R13043:13049 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13031:13033 LF.Imp <> ::x_'/'_x_'\\'_x not
R13036:13039 LF.Imp <> ::x_'/'_x_'\\'_x not
R13030:13030 LF.ImpCEvalFun <> c var
R13034:13035 LF.ImpCEvalFun <> st var
R13040:13042 LF.ImpCEvalFun <> st' var
R13050:13056 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13058:13059 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13077:13079 Coq.Init.Logic <> :type_scope:x_'='_x not
R13060:13069 LF.ImpCEvalFun <> ceval_step def
R13076:13076 LF.ImpCEvalFun <> i var
R13074:13074 LF.ImpCEvalFun <> c var
R13071:13072 LF.ImpCEvalFun <> st var
R13080:13083 Coq.Init.Datatypes <> Some constr
R13085:13087 LF.ImpCEvalFun <> st' var
R13131:13147 LF.ImpCEvalFun <> ceval__ceval_step thm
R13131:13147 LF.ImpCEvalFun <> ceval__ceval_step thm
R13156:13172 LF.ImpCEvalFun <> ceval_step__ceval thm
R13156:13172 LF.ImpCEvalFun <> ceval_step__ceval thm
prf 13487:13506 <> ceval_deterministic'
R13549:13558 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13572:13580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13584:13586 Coq.Init.Logic <> :type_scope:x_'='_x not
R13581:13583 LF.ImpCEvalFun <> st1 var
R13587:13589 LF.ImpCEvalFun <> st2 var
R13560:13562 LF.Imp <> ::x_'/'_x_'\\'_x not
R13565:13568 LF.Imp <> ::x_'/'_x_'\\'_x not
R13559:13559 LF.ImpCEvalFun <> c var
R13563:13564 LF.ImpCEvalFun <> st var
R13569:13571 LF.ImpCEvalFun <> st2 var
R13537:13539 LF.Imp <> ::x_'/'_x_'\\'_x not
R13542:13545 LF.Imp <> ::x_'/'_x_'\\'_x not
R13536:13536 LF.ImpCEvalFun <> c var
R13540:13541 LF.ImpCEvalFun <> st var
R13546:13548 LF.ImpCEvalFun <> st1 var
R13638:13654 LF.ImpCEvalFun <> ceval__ceval_step thm
R13638:13654 LF.ImpCEvalFun <> ceval__ceval_step thm
R13672:13688 LF.ImpCEvalFun <> ceval__ceval_step thm
R13672:13688 LF.ImpCEvalFun <> ceval__ceval_step thm
R13792:13794 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13762:13776 LF.ImpCEvalFun <> ceval_step_more thm
R13792:13794 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13762:13776 LF.ImpCEvalFun <> ceval_step_more thm
R13844:13846 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13814:13828 LF.ImpCEvalFun <> ceval_step_more thm
R13844:13846 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13814:13828 LF.ImpCEvalFun <> ceval_step_more thm
