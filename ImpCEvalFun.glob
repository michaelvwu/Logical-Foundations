DIGEST be6baaefd5018ea90c4a10d0fc996736
FLF.ImpCEvalFun
R521:535 Coq.omega.Omega <> <> lib
R553:567 Coq.Arith.Arith <> <> lib
R593:595 LF.Imp <> <> lib
R597:600 LF.Maps <> <> lib
def 706:716 <> ceval_step1
R724:728 LF.Imp <> state def
R736:738 LF.Imp <> com ind
R743:747 LF.Imp <> state def
R760:760 LF.ImpCEvalFun <> c var
R773:776 LF.Imp <> ::'SKIP' not
R789:790 LF.ImpCEvalFun <> st var
R799:803 LF.Imp <> ::x_'::='_x not
R818:825 LF.Maps <> t_update def
R833:837 LF.Imp <> aeval def
R839:840 LF.ImpCEvalFun <> st var
R827:828 LF.ImpCEvalFun <> st var
R854:857 LF.Imp <> ::x_';;'_x not
R883:893 LF.ImpCEvalFun <> ceval_step1 def
R895:896 LF.ImpCEvalFun <> st var
R912:922 LF.ImpCEvalFun <> ceval_step1 def
R924:926 LF.ImpCEvalFun <> st' var
R937:940 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R942:947 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R950:955 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R958:960 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R977:981 LF.Imp <> beval def
R983:984 LF.ImpCEvalFun <> st var
R1037:1047 LF.ImpCEvalFun <> ceval_step1 def
R1049:1050 LF.ImpCEvalFun <> st var
R1004:1014 LF.ImpCEvalFun <> ceval_step1 def
R1016:1017 LF.ImpCEvalFun <> st var
R1061:1066 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R1069:1072 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R1075:1078 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R1091:1092 LF.ImpCEvalFun <> st var
def 3084:3094 <> ceval_step2
R3102:3106 LF.Imp <> state def
R3114:3116 LF.Imp <> com ind
R3124:3126 Coq.Init.Datatypes <> nat ind
R3131:3135 LF.Imp <> state def
R3148:3148 LF.ImpCEvalFun <> i var
R3159:3159 Coq.Init.Datatypes <> O constr
R3164:3174 LF.Imp <> empty_state def
R3180:3180 Coq.Init.Datatypes <> S constr
R3198:3198 LF.ImpCEvalFun <> c var
R3213:3216 LF.Imp <> ::'SKIP' not
R3231:3232 LF.ImpCEvalFun <> st var
R3243:3247 LF.Imp <> ::x_'::='_x not
R3264:3271 LF.Maps <> t_update def
R3279:3283 LF.Imp <> aeval def
R3285:3286 LF.ImpCEvalFun <> st var
R3273:3274 LF.ImpCEvalFun <> st var
R3302:3305 LF.Imp <> ::x_';;'_x not
R3333:3343 LF.ImpCEvalFun <> ceval_step2 def
R3345:3346 LF.ImpCEvalFun <> st var
R3367:3377 LF.ImpCEvalFun <> ceval_step2 def
R3379:3381 LF.ImpCEvalFun <> st' var
R3397:3400 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3402:3407 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3410:3415 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3418:3420 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3439:3443 LF.Imp <> beval def
R3445:3446 LF.ImpCEvalFun <> st var
R3506:3516 LF.ImpCEvalFun <> ceval_step2 def
R3518:3519 LF.ImpCEvalFun <> st var
R3468:3478 LF.ImpCEvalFun <> ceval_step2 def
R3480:3481 LF.ImpCEvalFun <> st var
R3535:3540 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3543:3546 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3549:3552 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3571:3575 LF.Imp <> beval def
R3577:3578 LF.ImpCEvalFun <> st var
R3685:3686 LF.ImpCEvalFun <> st var
R3610:3620 LF.ImpCEvalFun <> ceval_step2 def
R3622:3623 LF.ImpCEvalFun <> st var
R3649:3659 LF.ImpCEvalFun <> ceval_step2 def
R3665:3665 LF.ImpCEvalFun <> c var
R3661:3663 LF.ImpCEvalFun <> st' var
def 4487:4497 <> ceval_step3
R4505:4509 LF.Imp <> state def
R4517:4519 LF.Imp <> com ind
R4527:4529 Coq.Init.Datatypes <> nat ind
R4554:4559 Coq.Init.Datatypes <> option ind
R4561:4565 LF.Imp <> state def
R4578:4578 LF.ImpCEvalFun <> i var
R4589:4589 Coq.Init.Datatypes <> O constr
R4594:4597 Coq.Init.Datatypes <> None constr
R4603:4603 Coq.Init.Datatypes <> S constr
R4621:4621 LF.ImpCEvalFun <> c var
R4636:4639 LF.Imp <> ::'SKIP' not
R4654:4657 Coq.Init.Datatypes <> Some constr
R4659:4660 LF.ImpCEvalFun <> st var
R4671:4675 LF.Imp <> ::x_'::='_x not
R4692:4695 Coq.Init.Datatypes <> Some constr
R4698:4705 LF.Maps <> t_update def
R4713:4717 LF.Imp <> aeval def
R4719:4720 LF.ImpCEvalFun <> st var
R4707:4708 LF.ImpCEvalFun <> st var
R4737:4740 LF.Imp <> ::x_';;'_x not
R4764:4774 LF.ImpCEvalFun <> ceval_step3 def
R4776:4777 LF.ImpCEvalFun <> st var
R4803:4806 Coq.Init.Datatypes <> Some constr
R4815:4825 LF.ImpCEvalFun <> ceval_step3 def
R4849:4852 Coq.Init.Datatypes <> None constr
R4857:4860 Coq.Init.Datatypes <> None constr
R4884:4887 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4889:4894 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4897:4902 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4905:4907 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4926:4930 LF.Imp <> beval def
R4932:4933 LF.ImpCEvalFun <> st var
R4993:5003 LF.ImpCEvalFun <> ceval_step3 def
R5005:5006 LF.ImpCEvalFun <> st var
R4955:4965 LF.ImpCEvalFun <> ceval_step3 def
R4967:4968 LF.ImpCEvalFun <> st var
R5022:5027 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5030:5033 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5036:5039 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5058:5062 LF.Imp <> beval def
R5064:5065 LF.ImpCEvalFun <> st var
R5234:5237 Coq.Init.Datatypes <> Some constr
R5239:5240 LF.ImpCEvalFun <> st var
R5093:5103 LF.ImpCEvalFun <> ceval_step3 def
R5105:5106 LF.ImpCEvalFun <> st var
R5137:5140 Coq.Init.Datatypes <> Some constr
R5149:5159 LF.ImpCEvalFun <> ceval_step3 def
R5165:5165 LF.ImpCEvalFun <> c var
R5187:5190 Coq.Init.Datatypes <> None constr
R5195:5198 Coq.Init.Datatypes <> None constr
R5511:5514 Coq.Init.Datatypes <> Some constr
R5535:5538 Coq.Init.Datatypes <> None constr
R5543:5546 Coq.Init.Datatypes <> None constr
not 5451:5451 <> ::'LETOPT'_x_'<=='_x_'IN'_x
def 5609:5618 <> ceval_step
R5626:5630 LF.Imp <> state def
R5638:5640 LF.Imp <> com ind
R5648:5650 Coq.Init.Datatypes <> nat ind
R5675:5680 Coq.Init.Datatypes <> option ind
R5682:5686 LF.Imp <> state def
R5699:5699 LF.ImpCEvalFun <> i var
R5710:5710 Coq.Init.Datatypes <> O constr
R5715:5718 Coq.Init.Datatypes <> None constr
R5724:5724 Coq.Init.Datatypes <> S constr
R5742:5742 LF.ImpCEvalFun <> c var
R5757:5760 LF.Imp <> ::'SKIP' not
R5775:5778 Coq.Init.Datatypes <> Some constr
R5780:5781 LF.ImpCEvalFun <> st var
R5792:5796 LF.Imp <> ::x_'::='_x not
R5813:5816 Coq.Init.Datatypes <> Some constr
R5819:5826 LF.Maps <> t_update def
R5834:5838 LF.Imp <> aeval def
R5840:5841 LF.ImpCEvalFun <> st var
R5828:5829 LF.ImpCEvalFun <> st var
R5858:5861 LF.Imp <> ::x_';;'_x not
R5878:5884 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5888:5892 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5912:5925 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5893:5902 LF.ImpCEvalFun <> ceval_step def
R5904:5905 LF.ImpCEvalFun <> st var
R5926:5935 LF.ImpCEvalFun <> ceval_step def
R5955:5958 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5960:5965 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5968:5973 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5976:5978 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5997:6001 LF.Imp <> beval def
R6003:6004 LF.ImpCEvalFun <> st var
R6063:6072 LF.ImpCEvalFun <> ceval_step def
R6074:6075 LF.ImpCEvalFun <> st var
R6026:6035 LF.ImpCEvalFun <> ceval_step def
R6037:6038 LF.ImpCEvalFun <> st var
R6091:6096 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6099:6102 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6105:6108 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6127:6131 LF.Imp <> beval def
R6133:6134 LF.ImpCEvalFun <> st var
R6243:6246 Coq.Init.Datatypes <> Some constr
R6248:6249 LF.ImpCEvalFun <> st var
R6155:6161 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6165:6169 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6189:6207 LF.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6170:6179 LF.ImpCEvalFun <> ceval_step def
R6181:6182 LF.ImpCEvalFun <> st var
R6208:6217 LF.ImpCEvalFun <> ceval_step def
R6223:6223 LF.ImpCEvalFun <> c var
def 6278:6287 <> test_ceval
R6293:6297 LF.Imp <> state def
R6303:6305 LF.Imp <> com ind
R6319:6328 LF.ImpCEvalFun <> ceval_step def
R6333:6333 LF.ImpCEvalFun <> c var
R6330:6331 LF.ImpCEvalFun <> st var
R6348:6351 Coq.Init.Datatypes <> None constr
R6359:6362 Coq.Init.Datatypes <> None constr
R6368:6371 Coq.Init.Datatypes <> Some constr
R6379:6382 Coq.Init.Datatypes <> Some constr
R6384:6384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6389:6390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6395:6396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6401:6401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6385:6386 LF.ImpCEvalFun <> st var
R6388:6388 LF.Imp <> X def
R6391:6392 LF.ImpCEvalFun <> st var
R6394:6394 LF.Imp <> Y def
R6397:6398 LF.ImpCEvalFun <> st var
R6400:6400 LF.Imp <> Z def
def 6872:6879 <> pup_to_n
R6883:6885 LF.Imp <> com ind
prf 7663:7679 <> ceval_step__ceval
R7705:7705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7744:7754 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7756:7758 LF.Imp <> ::x_'/'_x_'\\'_x not
R7761:7764 LF.Imp <> ::x_'/'_x_'\\'_x not
R7755:7755 LF.ImpCEvalFun <> c var
R7759:7760 LF.ImpCEvalFun <> st var
R7765:7767 LF.ImpCEvalFun <> st' var
R7706:7712 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7714:7715 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7733:7735 Coq.Init.Logic <> :type_scope:x_'='_x not
R7716:7725 LF.ImpCEvalFun <> ceval_step def
R7732:7732 LF.ImpCEvalFun <> i var
R7730:7730 LF.ImpCEvalFun <> c var
R7727:7728 LF.ImpCEvalFun <> st var
R7736:7739 Coq.Init.Datatypes <> Some constr
R7741:7743 LF.ImpCEvalFun <> st' var
R8146:8151 LF.Imp <> E_Skip constr
R8146:8151 LF.Imp <> E_Skip constr
R8178:8182 LF.Imp <> E_Ass constr
R8178:8182 LF.Imp <> E_Ass constr
R8234:8243 LF.ImpCEvalFun <> ceval_step def
R8234:8243 LF.ImpCEvalFun <> ceval_step def
R8335:8339 LF.Imp <> E_Seq constr
R8335:8339 LF.Imp <> E_Seq constr
R8554:8558 LF.Imp <> beval def
R8554:8558 LF.Imp <> beval def
R8617:8624 LF.Imp <> E_IfTrue constr
R8617:8624 LF.Imp <> E_IfTrue constr
R8730:8738 LF.Imp <> E_IfFalse constr
R8730:8738 LF.Imp <> E_IfFalse constr
R8833:8837 LF.Imp <> beval def
R8833:8837 LF.Imp <> beval def
R8900:8909 LF.ImpCEvalFun <> ceval_step def
R8900:8909 LF.ImpCEvalFun <> ceval_step def
R8977:8987 LF.Imp <> E_WhileTrue constr
R8977:8987 LF.Imp <> E_WhileTrue constr
R9245:9256 LF.Imp <> E_WhileFalse constr
R9245:9256 LF.Imp <> E_WhileFalse constr
prf 9775:9789 <> ceval_step_more
R9825:9830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9860:9865 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9884:9886 Coq.Init.Logic <> :type_scope:x_'='_x not
R9866:9875 LF.ImpCEvalFun <> ceval_step def
R9882:9883 LF.ImpCEvalFun <> i2 var
R9880:9880 LF.ImpCEvalFun <> c var
R9877:9878 LF.ImpCEvalFun <> st var
R9887:9890 Coq.Init.Datatypes <> Some constr
R9892:9894 LF.ImpCEvalFun <> st' var
R9849:9851 Coq.Init.Logic <> :type_scope:x_'='_x not
R9831:9840 LF.ImpCEvalFun <> ceval_step def
R9847:9848 LF.ImpCEvalFun <> i1 var
R9845:9845 LF.ImpCEvalFun <> c var
R9842:9843 LF.ImpCEvalFun <> st var
R9852:9855 Coq.Init.Datatypes <> Some constr
R9857:9859 LF.ImpCEvalFun <> st' var
R9819:9822 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R9817:9818 LF.ImpCEvalFun <> i1 var
R9823:9824 LF.ImpCEvalFun <> i2 var
R10099:10102 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R10099:10102 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R10348:10357 LF.ImpCEvalFun <> ceval_step def
R10348:10357 LF.ImpCEvalFun <> ceval_step def
R10685:10689 LF.Imp <> beval def
R10685:10689 LF.Imp <> beval def
R10812:10816 LF.Imp <> beval def
R10812:10816 LF.Imp <> beval def
R10857:10866 LF.ImpCEvalFun <> ceval_step def
R10857:10866 LF.ImpCEvalFun <> ceval_step def
prf 11368:11384 <> ceval__ceval_step
R11423:11432 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11433:11439 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11441:11442 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11460:11462 Coq.Init.Logic <> :type_scope:x_'='_x not
R11443:11452 LF.ImpCEvalFun <> ceval_step def
R11459:11459 LF.ImpCEvalFun <> i var
R11457:11457 LF.ImpCEvalFun <> c var
R11454:11455 LF.ImpCEvalFun <> st var
R11463:11466 Coq.Init.Datatypes <> Some constr
R11468:11470 LF.ImpCEvalFun <> st' var
R11411:11413 LF.Imp <> ::x_'/'_x_'\\'_x not
R11416:11419 LF.Imp <> ::x_'/'_x_'\\'_x not
R11410:11410 LF.ImpCEvalFun <> c var
R11414:11415 LF.ImpCEvalFun <> st var
R11420:11422 LF.ImpCEvalFun <> st' var
prf 11570:11598 <> ceval_and_ceval_step_coincide
R11637:11643 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11625:11627 LF.Imp <> ::x_'/'_x_'\\'_x not
R11630:11633 LF.Imp <> ::x_'/'_x_'\\'_x not
R11624:11624 LF.ImpCEvalFun <> c var
R11628:11629 LF.ImpCEvalFun <> st var
R11634:11636 LF.ImpCEvalFun <> st' var
R11644:11650 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11652:11653 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11671:11673 Coq.Init.Logic <> :type_scope:x_'='_x not
R11654:11663 LF.ImpCEvalFun <> ceval_step def
R11670:11670 LF.ImpCEvalFun <> i var
R11668:11668 LF.ImpCEvalFun <> c var
R11665:11666 LF.ImpCEvalFun <> st var
R11674:11677 Coq.Init.Datatypes <> Some constr
R11679:11681 LF.ImpCEvalFun <> st' var
R11725:11741 LF.ImpCEvalFun <> ceval__ceval_step prfax
R11725:11741 LF.ImpCEvalFun <> ceval__ceval_step prfax
R11750:11766 LF.ImpCEvalFun <> ceval_step__ceval thm
R11750:11766 LF.ImpCEvalFun <> ceval_step__ceval thm
prf 12081:12100 <> ceval_deterministic'
R12143:12152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12166:12174 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12178:12180 Coq.Init.Logic <> :type_scope:x_'='_x not
R12175:12177 LF.ImpCEvalFun <> st1 var
R12181:12183 LF.ImpCEvalFun <> st2 var
R12154:12156 LF.Imp <> ::x_'/'_x_'\\'_x not
R12159:12162 LF.Imp <> ::x_'/'_x_'\\'_x not
R12153:12153 LF.ImpCEvalFun <> c var
R12157:12158 LF.ImpCEvalFun <> st var
R12163:12165 LF.ImpCEvalFun <> st2 var
R12131:12133 LF.Imp <> ::x_'/'_x_'\\'_x not
R12136:12139 LF.Imp <> ::x_'/'_x_'\\'_x not
R12130:12130 LF.ImpCEvalFun <> c var
R12134:12135 LF.ImpCEvalFun <> st var
R12140:12142 LF.ImpCEvalFun <> st1 var
R12232:12248 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12232:12248 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12266:12282 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12266:12282 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12386:12388 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12356:12370 LF.ImpCEvalFun <> ceval_step_more thm
R12386:12388 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12356:12370 LF.ImpCEvalFun <> ceval_step_more thm
R12438:12440 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12408:12422 LF.ImpCEvalFun <> ceval_step_more thm
R12438:12440 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12408:12422 LF.ImpCEvalFun <> ceval_step_more thm
