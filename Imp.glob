DIGEST 1210a196b480d85a3c69ef162638202a
FLF.Imp
R894:906 Coq.Bool.Bool <> <> lib
R924:938 Coq.Arith.Arith <> <> lib
R956:970 Coq.Arith.EqNat <> <> lib
R988:1002 Coq.omega.Omega <> <> lib
R1020:1033 Coq.Lists.List <> <> lib
R1051:1065 Coq.omega.Omega <> <> lib
R1114:1117 LF.Maps <> <> lib
mod 1603:1606 <> AExp
ind 1723:1726 AExp aexp
constr 1742:1745 AExp ANum
constr 1765:1769 AExp APlus
constr 1798:1803 AExp AMinus
constr 1832:1836 AExp AMult
R1752:1755 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1756:1759 LF.Imp <> aexp ind
R1749:1751 Coq.Init.Datatypes <> nat ind
R1777:1780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1785:1788 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1789:1792 LF.Imp <> aexp ind
R1781:1784 LF.Imp <> aexp ind
R1773:1776 LF.Imp <> aexp ind
R1811:1814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1819:1822 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1823:1826 LF.Imp <> aexp ind
R1815:1818 LF.Imp <> aexp ind
R1807:1810 LF.Imp <> aexp ind
R1844:1847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1852:1855 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1856:1859 LF.Imp <> aexp ind
R1848:1851 LF.Imp <> aexp ind
R1840:1843 LF.Imp <> aexp ind
ind 1873:1876 AExp bexp
constr 1892:1896 AExp BTrue
constr 1909:1914 AExp BFalse
constr 1927:1929 AExp BEq
constr 1958:1960 AExp BLe
constr 1989:1992 AExp BNot
constr 2013:2016 AExp BAnd
R1900:1903 LF.Imp <> bexp ind
R1918:1921 LF.Imp <> bexp ind
R1937:1940 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1945:1948 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1949:1952 LF.Imp <> bexp ind
R1941:1944 LF.Imp AExp aexp ind
R1933:1936 LF.Imp AExp aexp ind
R1968:1971 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1976:1979 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1980:1983 LF.Imp <> bexp ind
R1972:1975 LF.Imp AExp aexp ind
R1964:1967 LF.Imp AExp aexp ind
R2000:2003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2004:2007 LF.Imp <> bexp ind
R1996:1999 LF.Imp <> bexp ind
R2024:2027 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2032:2035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2036:2039 LF.Imp <> bexp ind
R2028:2031 LF.Imp <> bexp ind
R2020:2023 LF.Imp <> bexp ind
def 4706:4710 AExp aeval
R4717:4720 LF.Imp AExp aexp ind
R4725:4727 Coq.Init.Datatypes <> nat ind
R4740:4740 LF.Imp <> a var
R4751:4754 LF.Imp AExp ANum constr
R4767:4771 LF.Imp AExp APlus constr
R4782:4782 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4791:4795 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4804:4804 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4783:4787 LF.Imp <> aeval def
R4796:4800 LF.Imp <> aeval def
R4810:4815 LF.Imp AExp AMinus constr
R4827:4827 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4836:4840 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4849:4849 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4828:4832 LF.Imp <> aeval def
R4841:4845 LF.Imp <> aeval def
R4855:4859 LF.Imp AExp AMult constr
R4870:4870 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4879:4883 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4892:4892 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4871:4875 LF.Imp <> aeval def
R4884:4888 LF.Imp <> aeval def
def 4910:4920 AExp test_aeval1
R4956:4958 Coq.Init.Logic <> :type_scope:x_'='_x not
R4925:4929 LF.Imp AExp aeval def
R4932:4936 LF.Imp AExp APlus constr
R4948:4951 LF.Imp AExp ANum constr
R4939:4942 LF.Imp AExp ANum constr
def 5066:5070 AExp beval
R5077:5080 LF.Imp AExp bexp ind
R5085:5088 Coq.Init.Datatypes <> bool ind
R5101:5101 LF.Imp <> b var
R5112:5116 LF.Imp AExp BTrue constr
R5127:5130 Coq.Init.Datatypes <> true constr
R5136:5141 LF.Imp AExp BFalse constr
R5151:5155 Coq.Init.Datatypes <> false constr
R5161:5163 LF.Imp AExp BEq constr
R5176:5182 Coq.Arith.EqNat <> beq_nat syndef
R5196:5200 LF.Imp AExp aeval def
R5185:5189 LF.Imp AExp aeval def
R5210:5212 LF.Imp AExp BLe constr
R5225:5227 Coq.Arith.Compare_dec <> leb syndef
R5241:5245 LF.Imp AExp aeval def
R5230:5234 LF.Imp AExp aeval def
R5255:5258 LF.Imp AExp BNot constr
R5270:5273 Coq.Init.Datatypes <> negb def
R5276:5280 LF.Imp <> beval def
R5290:5293 LF.Imp AExp BAnd constr
R5305:5308 Coq.Init.Datatypes <> andb def
R5322:5326 LF.Imp <> beval def
R5311:5315 LF.Imp <> beval def
def 5735:5748 AExp optimize_0plus
R5753:5756 LF.Imp AExp aexp ind
R5761:5764 LF.Imp AExp aexp ind
R5777:5777 LF.Imp <> a var
R5788:5791 LF.Imp AExp ANum constr
R5804:5807 LF.Imp AExp ANum constr
R5815:5819 LF.Imp AExp APlus constr
R5822:5825 LF.Imp AExp ANum constr
R5842:5855 LF.Imp <> optimize_0plus def
R5864:5868 LF.Imp AExp APlus constr
R5885:5889 LF.Imp AExp APlus constr
R5912:5925 LF.Imp <> optimize_0plus def
R5892:5905 LF.Imp <> optimize_0plus def
R5935:5940 LF.Imp AExp AMinus constr
R5957:5962 LF.Imp AExp AMinus constr
R5985:5998 LF.Imp <> optimize_0plus def
R5965:5978 LF.Imp <> optimize_0plus def
R6008:6012 LF.Imp AExp AMult constr
R6029:6033 LF.Imp AExp AMult constr
R6056:6069 LF.Imp <> optimize_0plus def
R6036:6049 LF.Imp <> optimize_0plus def
def 6222:6240 AExp test_optimize_0plus
R6374:6378 Coq.Init.Logic <> :type_scope:x_'='_x not
R6245:6258 LF.Imp AExp optimize_0plus def
R6261:6265 LF.Imp AExp APlus constr
R6301:6305 LF.Imp AExp APlus constr
R6348:6352 LF.Imp AExp APlus constr
R6364:6367 LF.Imp AExp ANum constr
R6355:6358 LF.Imp AExp ANum constr
R6308:6311 LF.Imp AExp ANum constr
R6268:6271 LF.Imp AExp ANum constr
R6379:6383 LF.Imp AExp APlus constr
R6395:6398 LF.Imp AExp ANum constr
R6386:6389 LF.Imp AExp ANum constr
prf 6618:6637 AExp optimize_0plus_sound
R6676:6678 Coq.Init.Logic <> :type_scope:x_'='_x not
R6652:6656 LF.Imp AExp aeval def
R6659:6672 LF.Imp AExp optimize_0plus def
R6674:6674 LF.Imp <> a var
R6679:6683 LF.Imp AExp aeval def
R6685:6685 LF.Imp <> a var
prf 8810:8815 AExp silly1
R8838:8840 Coq.Init.Logic <> :type_scope:x_'='_x not
R8830:8834 LF.Imp AExp aeval def
R8836:8837 LF.Imp <> ae var
R8841:8845 LF.Imp AExp aeval def
R8847:8848 LF.Imp <> ae var
prf 8924:8929 AExp silly2
R8953:8956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8957:8957 LF.Imp <> P var
R8952:8952 LF.Imp <> P var
prf 9696:9698 AExp foo
R9719:9721 Coq.Init.Logic <> :type_scope:x_'='_x not
R9712:9714 Coq.Arith.Compare_dec <> leb syndef
R9718:9718 LF.Imp <> n var
R9722:9725 Coq.Init.Datatypes <> true constr
prf 9972:9975 AExp foo'
R9996:9998 Coq.Init.Logic <> :type_scope:x_'='_x not
R9989:9991 Coq.Arith.Compare_dec <> leb syndef
R9995:9995 LF.Imp <> n var
R9999:10002 Coq.Init.Datatypes <> true constr
prf 10339:10359 AExp optimize_0plus_sound'
R10398:10400 Coq.Init.Logic <> :type_scope:x_'='_x not
R10374:10378 LF.Imp AExp aeval def
R10381:10394 LF.Imp AExp optimize_0plus def
R10396:10396 LF.Imp <> a var
R10401:10405 LF.Imp AExp aeval def
R10407:10407 LF.Imp <> a var
prf 13225:13246 AExp optimize_0plus_sound''
R13285:13287 Coq.Init.Logic <> :type_scope:x_'='_x not
R13261:13265 LF.Imp AExp aeval def
R13268:13281 LF.Imp AExp optimize_0plus def
R13283:13283 LF.Imp <> a var
R13288:13292 LF.Imp AExp aeval def
R13294:13294 LF.Imp <> a var
prf 14655:14658 AExp In10
R14662:14663 Coq.Lists.List <> In def
R14668:14668 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14670:14670 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14672:14672 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14674:14674 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14676:14676 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14678:14678 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14680:14680 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14682:14682 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14684:14684 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14686:14686 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14689:14689 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 14954:14958 AExp In10'
R14962:14963 Coq.Lists.List <> In def
R14968:14968 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14970:14970 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14972:14972 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14974:14974 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14976:14976 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14978:14978 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14980:14980 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14982:14982 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14984:14984 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14986:14986 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14989:14989 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 16191:16206 AExp optimize_0plus_b
R16213:16216 LF.Imp AExp bexp ind
R16221:16224 LF.Imp AExp bexp ind
R16235:16235 LF.Imp <> b var
R16246:16250 LF.Imp AExp BTrue constr
R16261:16265 LF.Imp AExp BTrue constr
R16271:16276 LF.Imp AExp BFalse constr
R16286:16291 LF.Imp AExp BFalse constr
R16297:16299 LF.Imp AExp BEq constr
R16312:16314 LF.Imp AExp BEq constr
R16337:16350 LF.Imp AExp optimize_0plus def
R16317:16330 LF.Imp AExp optimize_0plus def
R16360:16362 LF.Imp AExp BLe constr
R16375:16377 LF.Imp AExp BLe constr
R16400:16413 LF.Imp AExp optimize_0plus def
R16380:16393 LF.Imp AExp optimize_0plus def
R16423:16426 LF.Imp AExp BNot constr
R16438:16441 LF.Imp AExp BNot constr
R16444:16459 LF.Imp <> optimize_0plus_b def
R16469:16472 LF.Imp AExp BAnd constr
R16484:16487 LF.Imp AExp BAnd constr
R16512:16527 LF.Imp <> optimize_0plus_b def
R16490:16505 LF.Imp <> optimize_0plus_b def
prf 16549:16570 AExp optimize_0plus_b_sound
R16612:16614 Coq.Init.Logic <> :type_scope:x_'='_x not
R16586:16590 LF.Imp AExp beval def
R16593:16608 LF.Imp AExp optimize_0plus_b def
R16610:16610 LF.Imp <> b var
R16615:16619 LF.Imp AExp beval def
R16621:16621 LF.Imp <> b var
R16769:16773 LF.Imp AExp beval def
def 19740:19763 AExp silly_presburger_example
R19816:19821 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19823:19826 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19822:19822 LF.Imp <> m var
R19827:19827 LF.Imp <> p var
R19799:19802 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19790:19793 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19786:19788 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19785:19785 LF.Imp <> m var
R19789:19789 LF.Imp <> n var
R19795:19797 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19794:19794 LF.Imp <> n var
R19798:19798 LF.Imp <> o var
R19808:19810 Coq.Init.Logic <> :type_scope:x_'='_x not
R19804:19806 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19803:19803 LF.Imp <> o var
R19812:19814 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19811:19811 LF.Imp <> p var
mod 21728:21743 <> AExp.aevalR_first_try
ind 21757:21762 AExp.aevalR_first_try aevalR
constr 21793:21798 AExp.aevalR_first_try E_ANum
constr 21848:21854 AExp.aevalR_first_try E_APlus
constr 21978:21985 AExp.aevalR_first_try E_AMinus
constr 22109:22115 AExp.aevalR_first_try E_AMult
R21770:21773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21777:21780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21774:21776 Coq.Init.Datatypes <> nat ind
R21766:21769 LF.Imp AExp aexp ind
R21814:21816 Coq.Init.Datatypes <> nat ind
R21826:21831 LF.Imp <> aevalR ind
R21842:21842 LF.Imp <> n var
R21834:21837 LF.Imp AExp ANum constr
R21839:21839 LF.Imp <> n var
R21873:21876 LF.Imp AExp aexp ind
R21887:21889 Coq.Init.Datatypes <> nat ind
R21911:21920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21933:21942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21943:21948 LF.Imp <> aevalR ind
R21967:21969 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21965:21966 LF.Imp <> n1 var
R21970:21971 LF.Imp <> n2 var
R21951:21955 LF.Imp AExp APlus constr
R21960:21961 LF.Imp <> e2 var
R21957:21958 LF.Imp <> e1 var
R21921:21926 LF.Imp <> aevalR ind
R21931:21932 LF.Imp <> n2 var
R21928:21929 LF.Imp <> e2 var
R21899:21904 LF.Imp <> aevalR ind
R21909:21910 LF.Imp <> n1 var
R21906:21907 LF.Imp <> e1 var
R22003:22006 LF.Imp AExp aexp ind
R22017:22019 Coq.Init.Datatypes <> nat ind
R22041:22050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22063:22072 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22073:22078 LF.Imp <> aevalR ind
R22098:22100 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R22096:22097 LF.Imp <> n1 var
R22101:22102 LF.Imp <> n2 var
R22081:22086 LF.Imp AExp AMinus constr
R22091:22092 LF.Imp <> e2 var
R22088:22089 LF.Imp <> e1 var
R22051:22056 LF.Imp <> aevalR ind
R22061:22062 LF.Imp <> n2 var
R22058:22059 LF.Imp <> e2 var
R22029:22034 LF.Imp <> aevalR ind
R22039:22040 LF.Imp <> n1 var
R22036:22037 LF.Imp <> e1 var
R22134:22137 LF.Imp AExp aexp ind
R22148:22150 Coq.Init.Datatypes <> nat ind
R22172:22181 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22194:22203 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22204:22209 LF.Imp <> aevalR ind
R22228:22230 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R22226:22227 LF.Imp <> n1 var
R22231:22232 LF.Imp <> n2 var
R22212:22216 LF.Imp AExp AMult constr
R22221:22222 LF.Imp <> e2 var
R22218:22219 LF.Imp <> e1 var
R22182:22187 LF.Imp <> aevalR ind
R22192:22193 LF.Imp <> n2 var
R22189:22190 LF.Imp <> e2 var
R22160:22165 LF.Imp <> aevalR ind
R22170:22171 LF.Imp <> n1 var
R22167:22168 LF.Imp <> e1 var
R22433:22438 LF.Imp AExp.aevalR_first_try aevalR ind
not 22409:22409 AExp.aevalR_first_try :type_scope:x_'\\'_x
R22519:22534 LF.Imp AExp.aevalR_first_try <> mod
ind 23065:23070 AExp aevalR
constr 23101:23106 AExp E_ANum
constr 23150:23156 AExp E_APlus
constr 23261:23268 AExp E_AMinus
constr 23374:23380 AExp E_AMult
R23078:23081 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23085:23088 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23082:23084 Coq.Init.Datatypes <> nat ind
R23074:23077 LF.Imp AExp aexp ind
R23506:23511 LF.Imp <> aevalR var
R23120:23122 Coq.Init.Datatypes <> nat ind
R23132:23132 LF.Imp AExp :type_scope:x_'\\'_x not
R23139:23143 LF.Imp AExp :type_scope:x_'\\'_x not
R23133:23136 LF.Imp AExp ANum constr
R23138:23138 LF.Imp <> n var
R23144:23144 LF.Imp <> n var
R23175:23178 LF.Imp AExp aexp ind
R23190:23192 Coq.Init.Datatypes <> nat ind
R23202:23202 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23211:23215 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23216:23216 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23225:23229 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23230:23230 LF.Imp AExp :type_scope:x_'\\'_x not
R23242:23247 LF.Imp AExp :type_scope:x_'\\'_x not
R23255:23255 LF.Imp AExp :type_scope:x_'\\'_x not
R23231:23235 LF.Imp AExp APlus constr
R23240:23241 LF.Imp <> e2 var
R23237:23238 LF.Imp <> e1 var
R23250:23252 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23248:23249 LF.Imp <> n1 var
R23253:23254 LF.Imp <> n2 var
R23219:23222 LF.Imp AExp :type_scope:x_'\\'_x not
R23217:23218 LF.Imp <> e2 var
R23223:23224 LF.Imp <> n2 var
R23205:23208 LF.Imp AExp :type_scope:x_'\\'_x not
R23203:23204 LF.Imp <> e1 var
R23209:23210 LF.Imp <> n1 var
R23287:23290 LF.Imp AExp aexp ind
R23302:23304 Coq.Init.Datatypes <> nat ind
R23314:23314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23323:23327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23328:23328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23337:23341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23342:23342 LF.Imp AExp :type_scope:x_'\\'_x not
R23355:23360 LF.Imp AExp :type_scope:x_'\\'_x not
R23368:23368 LF.Imp AExp :type_scope:x_'\\'_x not
R23343:23348 LF.Imp AExp AMinus constr
R23353:23354 LF.Imp <> e2 var
R23350:23351 LF.Imp <> e1 var
R23363:23365 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23361:23362 LF.Imp <> n1 var
R23366:23367 LF.Imp <> n2 var
R23331:23334 LF.Imp AExp :type_scope:x_'\\'_x not
R23329:23330 LF.Imp <> e2 var
R23335:23336 LF.Imp <> n2 var
R23317:23320 LF.Imp AExp :type_scope:x_'\\'_x not
R23315:23316 LF.Imp <> e1 var
R23321:23322 LF.Imp <> n1 var
R23400:23403 LF.Imp AExp aexp ind
R23415:23417 Coq.Init.Datatypes <> nat ind
R23427:23427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23436:23440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23441:23441 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23450:23454 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23455:23455 LF.Imp AExp :type_scope:x_'\\'_x not
R23467:23472 LF.Imp AExp :type_scope:x_'\\'_x not
R23480:23480 LF.Imp AExp :type_scope:x_'\\'_x not
R23456:23460 LF.Imp AExp AMult constr
R23465:23466 LF.Imp <> e2 var
R23462:23463 LF.Imp <> e1 var
R23475:23477 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23473:23474 LF.Imp <> n1 var
R23478:23479 LF.Imp <> n2 var
R23444:23447 LF.Imp AExp :type_scope:x_'\\'_x not
R23442:23443 LF.Imp <> e2 var
R23448:23449 LF.Imp <> n2 var
R23430:23433 LF.Imp AExp :type_scope:x_'\\'_x not
R23428:23429 LF.Imp <> e1 var
R23434:23435 LF.Imp <> n1 var
R23506:23511 LF.Imp AExp aevalR ind
not 23491:23491 AExp :type_scope:x_'\\'_x
prf 26383:26398 AExp aeval_iff_aevalR
R26416:26416 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26423:26428 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26418:26421 LF.Imp AExp :type_scope:x_'\\'_x not
R26417:26417 LF.Imp <> a var
R26422:26422 LF.Imp <> n var
R26436:26438 Coq.Init.Logic <> :type_scope:x_'='_x not
R26429:26433 LF.Imp AExp aeval def
R26435:26435 LF.Imp <> a var
R26439:26439 LF.Imp <> n var
R26883:26888 LF.Imp AExp E_ANum constr
R26883:26888 LF.Imp AExp E_ANum constr
R26919:26925 LF.Imp AExp E_APlus constr
R26919:26925 LF.Imp AExp E_APlus constr
R27019:27026 LF.Imp AExp E_AMinus constr
R27019:27026 LF.Imp AExp E_AMinus constr
R27119:27125 LF.Imp AExp E_AMult constr
R27119:27125 LF.Imp AExp E_AMult constr
prf 27291:27307 AExp aeval_iff_aevalR'
R27325:27325 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27332:27337 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27327:27330 LF.Imp AExp :type_scope:x_'\\'_x not
R27326:27326 LF.Imp <> a var
R27331:27331 LF.Imp <> n var
R27345:27347 Coq.Init.Logic <> :type_scope:x_'='_x not
R27338:27342 LF.Imp AExp aeval def
R27344:27344 LF.Imp <> a var
R27348:27348 LF.Imp <> n var
ind 27765:27770 AExp bevalR
R27777:27780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27785:27788 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27781:27784 Coq.Init.Datatypes <> bool ind
R27773:27776 LF.Imp AExp bexp ind
prf 28393:28408 AExp beval_iff_bevalR
R28438:28442 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R28427:28432 LF.Imp AExp bevalR ind
R28436:28437 LF.Imp <> bv var
R28434:28434 LF.Imp <> b var
R28450:28452 Coq.Init.Logic <> :type_scope:x_'='_x not
R28443:28447 LF.Imp AExp beval def
R28449:28449 LF.Imp <> b var
R28453:28454 LF.Imp <> bv var
R29379:29382 LF.Imp AExp <> mod
mod 29845:29859 <> aevalR_division
ind 29998:30001 aevalR_division aexp
constr 30017:30020 aevalR_division ANum
constr 30040:30044 aevalR_division APlus
constr 30073:30078 aevalR_division AMinus
constr 30107:30111 aevalR_division AMult
constr 30140:30143 aevalR_division ADiv
R30027:30030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30031:30034 LF.Imp <> aexp ind
R30024:30026 Coq.Init.Datatypes <> nat ind
R30052:30055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30060:30063 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30064:30067 LF.Imp <> aexp ind
R30056:30059 LF.Imp <> aexp ind
R30048:30051 LF.Imp <> aexp ind
R30086:30089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30094:30097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30098:30101 LF.Imp <> aexp ind
R30090:30093 LF.Imp <> aexp ind
R30082:30085 LF.Imp <> aexp ind
R30119:30122 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30127:30130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30131:30134 LF.Imp <> aexp ind
R30123:30126 LF.Imp <> aexp ind
R30115:30118 LF.Imp <> aexp ind
R30151:30154 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30159:30162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30163:30166 LF.Imp <> aexp ind
R30155:30158 LF.Imp <> aexp ind
R30147:30150 LF.Imp <> aexp ind
ind 30506:30511 aevalR_division aevalR
constr 30542:30547 aevalR_division E_ANum
constr 30591:30597 aevalR_division E_APlus
constr 30702:30709 aevalR_division E_AMinus
constr 30815:30821 aevalR_division E_AMult
constr 30927:30932 aevalR_division E_ADiv
R30519:30522 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30526:30529 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30523:30525 Coq.Init.Datatypes <> nat ind
R30515:30518 LF.Imp aevalR_division aexp ind
R31089:31094 LF.Imp <> aevalR var
R30561:30563 Coq.Init.Datatypes <> nat ind
R30573:30573 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30580:30584 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30574:30577 LF.Imp aevalR_division ANum constr
R30579:30579 LF.Imp <> n var
R30585:30585 LF.Imp <> n var
R30616:30619 LF.Imp aevalR_division aexp ind
R30631:30633 Coq.Init.Datatypes <> nat ind
R30643:30643 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30652:30656 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30657:30657 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30666:30670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30671:30671 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30683:30688 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30696:30696 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30672:30676 LF.Imp aevalR_division APlus constr
R30681:30682 LF.Imp <> a2 var
R30678:30679 LF.Imp <> a1 var
R30691:30693 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30689:30690 LF.Imp <> n1 var
R30694:30695 LF.Imp <> n2 var
R30660:30663 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30658:30659 LF.Imp <> a2 var
R30664:30665 LF.Imp <> n2 var
R30646:30649 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30644:30645 LF.Imp <> a1 var
R30650:30651 LF.Imp <> n1 var
R30728:30731 LF.Imp aevalR_division aexp ind
R30743:30745 Coq.Init.Datatypes <> nat ind
R30755:30755 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30764:30768 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30769:30769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30778:30782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30783:30783 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30796:30801 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30809:30809 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30784:30789 LF.Imp aevalR_division AMinus constr
R30794:30795 LF.Imp <> a2 var
R30791:30792 LF.Imp <> a1 var
R30804:30806 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R30802:30803 LF.Imp <> n1 var
R30807:30808 LF.Imp <> n2 var
R30772:30775 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30770:30771 LF.Imp <> a2 var
R30776:30777 LF.Imp <> n2 var
R30758:30761 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30756:30757 LF.Imp <> a1 var
R30762:30763 LF.Imp <> n1 var
R30841:30844 LF.Imp aevalR_division aexp ind
R30856:30858 Coq.Init.Datatypes <> nat ind
R30868:30868 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30877:30881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30882:30882 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30891:30895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30896:30896 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30908:30913 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30921:30921 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30897:30901 LF.Imp aevalR_division AMult constr
R30906:30907 LF.Imp <> a2 var
R30903:30904 LF.Imp <> a1 var
R30916:30918 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R30914:30915 LF.Imp <> n1 var
R30919:30920 LF.Imp <> n2 var
R30885:30888 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30883:30884 LF.Imp <> a2 var
R30889:30890 LF.Imp <> n2 var
R30871:30874 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30869:30870 LF.Imp <> a1 var
R30875:30876 LF.Imp <> n1 var
R30952:30955 LF.Imp aevalR_division aexp ind
R30969:30971 Coq.Init.Datatypes <> nat ind
R30981:30981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30990:30994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30995:30995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31004:31008 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31009:31009 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31016:31026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31027:31027 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31043:31047 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31048:31048 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R31059:31063 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R31049:31052 LF.Imp aevalR_division ADiv constr
R31057:31058 LF.Imp <> a2 var
R31054:31055 LF.Imp <> a1 var
R31064:31065 LF.Imp <> n3 var
R31038:31040 Coq.Init.Logic <> :type_scope:x_'='_x not
R31028:31031 Coq.Init.Peano <> mult syndef
R31036:31037 LF.Imp <> n3 var
R31033:31034 LF.Imp <> n2 var
R31041:31042 LF.Imp <> n1 var
R31012:31014 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R31010:31011 LF.Imp <> n2 var
R30998:31001 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30996:30997 LF.Imp <> a2 var
R31002:31003 LF.Imp <> n2 var
R30984:30987 LF.Imp aevalR_division :type_scope:x_'\\'_x not
R30982:30983 LF.Imp <> a1 var
R30988:30989 LF.Imp <> n1 var
R31089:31094 LF.Imp aevalR_division aevalR ind
not 31074:31074 aevalR_division :type_scope:x_'\\'_x
R31120:31134 LF.Imp aevalR_division <> mod
mod 31145:31159 <> aevalR_extended
ind 31627:31630 aevalR_extended aexp
constr 31646:31649 aevalR_extended AAny
constr 31696:31699 aevalR_extended ANum
constr 31719:31723 aevalR_extended APlus
constr 31752:31757 aevalR_extended AMinus
constr 31786:31790 aevalR_extended AMult
R31654:31657 LF.Imp <> aexp ind
R31706:31709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31710:31713 LF.Imp <> aexp ind
R31703:31705 Coq.Init.Datatypes <> nat ind
R31731:31734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31739:31742 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31743:31746 LF.Imp <> aexp ind
R31735:31738 LF.Imp <> aexp ind
R31727:31730 LF.Imp <> aexp ind
R31765:31768 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31773:31776 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31777:31780 LF.Imp <> aexp ind
R31769:31772 LF.Imp <> aexp ind
R31761:31764 LF.Imp <> aexp ind
R31798:31801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31806:31809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31810:31813 LF.Imp <> aexp ind
R31802:31805 LF.Imp <> aexp ind
R31794:31797 LF.Imp <> aexp ind
ind 32007:32012 aevalR_extended aevalR
constr 32043:32047 aevalR_extended E_Any
constr 32118:32123 aevalR_extended E_ANum
constr 32167:32173 aevalR_extended E_APlus
constr 32278:32285 aevalR_extended E_AMinus
constr 32391:32397 aevalR_extended E_AMult
R32020:32023 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32027:32030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32024:32026 Coq.Init.Datatypes <> nat ind
R32016:32019 LF.Imp aevalR_extended aexp ind
R32521:32526 LF.Imp <> aevalR var
R32061:32063 Coq.Init.Datatypes <> nat ind
R32077:32080 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32073:32076 LF.Imp aevalR_extended AAny constr
R32081:32081 LF.Imp <> n var
R32137:32139 Coq.Init.Datatypes <> nat ind
R32149:32149 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32156:32160 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32150:32153 LF.Imp aevalR_extended ANum constr
R32155:32155 LF.Imp <> n var
R32161:32161 LF.Imp <> n var
R32192:32195 LF.Imp aevalR_extended aexp ind
R32207:32209 Coq.Init.Datatypes <> nat ind
R32219:32219 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32228:32232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32233:32233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32242:32246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32247:32247 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32259:32264 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32272:32272 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32248:32252 LF.Imp aevalR_extended APlus constr
R32257:32258 LF.Imp <> a2 var
R32254:32255 LF.Imp <> a1 var
R32267:32269 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32265:32266 LF.Imp <> n1 var
R32270:32271 LF.Imp <> n2 var
R32236:32239 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32234:32235 LF.Imp <> a2 var
R32240:32241 LF.Imp <> n2 var
R32222:32225 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32220:32221 LF.Imp <> a1 var
R32226:32227 LF.Imp <> n1 var
R32304:32307 LF.Imp aevalR_extended aexp ind
R32319:32321 Coq.Init.Datatypes <> nat ind
R32331:32331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32340:32344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32345:32345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32354:32358 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32359:32359 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32372:32377 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32385:32385 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32360:32365 LF.Imp aevalR_extended AMinus constr
R32370:32371 LF.Imp <> a2 var
R32367:32368 LF.Imp <> a1 var
R32380:32382 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R32378:32379 LF.Imp <> n1 var
R32383:32384 LF.Imp <> n2 var
R32348:32351 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32346:32347 LF.Imp <> a2 var
R32352:32353 LF.Imp <> n2 var
R32334:32337 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32332:32333 LF.Imp <> a1 var
R32338:32339 LF.Imp <> n1 var
R32417:32420 LF.Imp aevalR_extended aexp ind
R32432:32434 Coq.Init.Datatypes <> nat ind
R32444:32444 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32453:32457 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32458:32458 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32467:32471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32472:32472 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32484:32489 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32497:32497 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32473:32477 LF.Imp aevalR_extended AMult constr
R32482:32483 LF.Imp <> a2 var
R32479:32480 LF.Imp <> a1 var
R32492:32494 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R32490:32491 LF.Imp <> n1 var
R32495:32496 LF.Imp <> n2 var
R32461:32464 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32459:32460 LF.Imp <> a2 var
R32465:32466 LF.Imp <> n2 var
R32447:32450 LF.Imp aevalR_extended :type_scope:x_'\\'_x not
R32445:32446 LF.Imp <> a1 var
R32451:32452 LF.Imp <> n1 var
R32521:32526 LF.Imp aevalR_extended aevalR ind
not 32506:32506 aevalR_extended :type_scope:x_'\\'_x
R32552:32566 LF.Imp aevalR_extended <> mod
def 35335:35339 <> state
R35344:35352 LF.Maps <> total_map def
R35354:35356 Coq.Init.Datatypes <> nat ind
def 35371:35381 <> empty_state
R35385:35389 LF.Imp <> state def
R35396:35402 LF.Maps <> t_empty def
ind 35625:35628 <> aexp
constr 35644:35647 <> ANum
constr 35667:35669 <> AId
constr 35720:35724 <> APlus
constr 35753:35758 <> AMinus
constr 35787:35791 <> AMult
R35654:35657 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35658:35661 LF.Imp <> aexp ind
R35651:35653 Coq.Init.Datatypes <> nat ind
R35675:35678 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35679:35682 LF.Imp <> aexp ind
R35673:35674 LF.Maps <> id ind
R35732:35735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35740:35743 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35744:35747 LF.Imp <> aexp ind
R35736:35739 LF.Imp <> aexp ind
R35728:35731 LF.Imp <> aexp ind
R35766:35769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35774:35777 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35778:35781 LF.Imp <> aexp ind
R35770:35773 LF.Imp <> aexp ind
R35762:35765 LF.Imp <> aexp ind
R35799:35802 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35807:35810 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35811:35814 LF.Imp <> aexp ind
R35803:35806 LF.Imp <> aexp ind
R35795:35798 LF.Imp <> aexp ind
def 35931:35931 <> W
R35935:35936 LF.Maps <> id ind
R35941:35942 LF.Maps <> Id constr
def 35960:35960 <> X
R35964:35965 LF.Maps <> id ind
R35970:35971 LF.Maps <> Id constr
def 35989:35989 <> Y
R35993:35994 LF.Maps <> id ind
R35999:36000 LF.Maps <> Id constr
def 36018:36018 <> Z
R36022:36023 LF.Maps <> id ind
R36028:36029 LF.Maps <> Id constr
ind 36407:36410 <> bexp
constr 36426:36430 <> BTrue
constr 36443:36448 <> BFalse
constr 36461:36463 <> BEq
constr 36492:36494 <> BLe
constr 36523:36526 <> BNot
constr 36547:36550 <> BAnd
R36434:36437 LF.Imp <> bexp ind
R36452:36455 LF.Imp <> bexp ind
R36471:36474 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36479:36482 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36483:36486 LF.Imp <> bexp ind
R36475:36478 LF.Imp <> aexp ind
R36467:36470 LF.Imp <> aexp ind
R36502:36505 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36510:36513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36514:36517 LF.Imp <> bexp ind
R36506:36509 LF.Imp <> aexp ind
R36498:36501 LF.Imp <> aexp ind
R36534:36537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36538:36541 LF.Imp <> bexp ind
R36530:36533 LF.Imp <> bexp ind
R36558:36561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36566:36569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36570:36573 LF.Imp <> bexp ind
R36562:36565 LF.Imp <> bexp ind
R36554:36557 LF.Imp <> bexp ind
def 36819:36823 <> aeval
R36831:36835 LF.Imp <> state def
R36843:36846 LF.Imp <> aexp ind
R36851:36853 Coq.Init.Datatypes <> nat ind
R36866:36866 LF.Imp <> a var
R36877:36880 LF.Imp <> ANum constr
R36893:36895 LF.Imp <> AId constr
R36902:36903 LF.Imp <> st var
R36959:36963 LF.Imp <> APlus constr
R36974:36974 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36986:36990 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R37002:37002 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36975:36979 LF.Imp <> aeval def
R36981:36982 LF.Imp <> st var
R36991:36995 LF.Imp <> aeval def
R36997:36998 LF.Imp <> st var
R37008:37013 LF.Imp <> AMinus constr
R37025:37025 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R37037:37041 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R37053:37053 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R37026:37030 LF.Imp <> aeval def
R37032:37033 LF.Imp <> st var
R37042:37046 LF.Imp <> aeval def
R37048:37049 LF.Imp <> st var
R37059:37063 LF.Imp <> AMult constr
R37074:37074 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R37086:37090 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R37102:37102 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R37075:37079 LF.Imp <> aeval def
R37081:37082 LF.Imp <> st var
R37091:37095 LF.Imp <> aeval def
R37097:37098 LF.Imp <> st var
def 37121:37125 <> beval
R37133:37137 LF.Imp <> state def
R37145:37148 LF.Imp <> bexp ind
R37153:37156 Coq.Init.Datatypes <> bool ind
R37169:37169 LF.Imp <> b var
R37180:37184 LF.Imp <> BTrue constr
R37195:37198 Coq.Init.Datatypes <> true constr
R37204:37209 LF.Imp <> BFalse constr
R37219:37223 Coq.Init.Datatypes <> false constr
R37229:37231 LF.Imp <> BEq constr
R37244:37250 Coq.Arith.EqNat <> beq_nat syndef
R37267:37271 LF.Imp <> aeval def
R37273:37274 LF.Imp <> st var
R37253:37257 LF.Imp <> aeval def
R37259:37260 LF.Imp <> st var
R37284:37286 LF.Imp <> BLe constr
R37299:37301 Coq.Arith.Compare_dec <> leb syndef
R37318:37322 LF.Imp <> aeval def
R37324:37325 LF.Imp <> st var
R37304:37308 LF.Imp <> aeval def
R37310:37311 LF.Imp <> st var
R37335:37338 LF.Imp <> BNot constr
R37350:37353 Coq.Init.Datatypes <> negb def
R37356:37360 LF.Imp <> beval def
R37362:37363 LF.Imp <> st var
R37373:37376 LF.Imp <> BAnd constr
R37388:37391 Coq.Init.Datatypes <> andb def
R37408:37412 LF.Imp <> beval def
R37414:37415 LF.Imp <> st var
R37394:37398 LF.Imp <> beval def
R37400:37401 LF.Imp <> st var
def 37437:37441 <> aexp1
R37529:37533 Coq.Init.Logic <> :type_scope:x_'='_x not
R37447:37451 LF.Imp <> aeval def
R37489:37493 LF.Imp <> APlus constr
R37505:37509 LF.Imp <> AMult constr
R37520:37523 LF.Imp <> ANum constr
R37512:37514 LF.Imp <> AId constr
R37516:37516 LF.Imp <> X def
R37496:37499 LF.Imp <> ANum constr
R37454:37461 LF.Maps <> t_update def
R37475:37475 LF.Imp <> X def
R37463:37473 LF.Imp <> empty_state def
def 37572:37576 <> bexp1
R37665:37669 Coq.Init.Logic <> :type_scope:x_'='_x not
R37582:37586 LF.Imp <> beval def
R37624:37627 LF.Imp <> BAnd constr
R37636:37639 LF.Imp <> BNot constr
R37642:37644 LF.Imp <> BLe constr
R37655:37658 LF.Imp <> ANum constr
R37647:37649 LF.Imp <> AId constr
R37651:37651 LF.Imp <> X def
R37629:37633 LF.Imp <> BTrue constr
R37589:37596 LF.Maps <> t_update def
R37610:37610 LF.Imp <> X def
R37598:37608 LF.Imp <> empty_state def
R37670:37673 Coq.Init.Datatypes <> true constr
ind 38760:38762 <> com
constr 38778:38782 <> CSkip
constr 38794:38797 <> CAss
constr 38823:38826 <> CSeq
constr 38852:38854 <> CIf
constr 38888:38893 <> CWhile
R38786:38788 LF.Imp <> com ind
R38803:38806 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38811:38814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38815:38817 LF.Imp <> com ind
R38807:38810 LF.Imp <> aexp ind
R38801:38802 LF.Maps <> id ind
R38833:38836 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38840:38843 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38844:38846 LF.Imp <> com ind
R38837:38839 LF.Imp <> com ind
R38830:38832 LF.Imp <> com ind
R38862:38865 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38869:38872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38876:38879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38880:38882 LF.Imp <> com ind
R38873:38875 LF.Imp <> com ind
R38866:38868 LF.Imp <> com ind
R38858:38861 LF.Imp <> bexp ind
R38901:38904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38908:38911 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38912:38914 LF.Imp <> com ind
R38905:38907 LF.Imp <> com ind
R38897:38900 LF.Imp <> bexp ind
R39272:39276 LF.Imp <> CSkip constr
not 39258:39258 <> ::'SKIP'
R39306:39309 LF.Imp <> CAss constr
not 39288:39288 <> ::x_'::='_x
R39357:39360 LF.Imp <> CSeq constr
not 39340:39340 <> ::x_';;'_x
R39445:39450 LF.Imp <> CWhile constr
not 39414:39414 <> ::'WHILE'_x_'DO'_x_'END'
R39544:39546 LF.Imp <> CIf constr
not 39502:39502 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 39708:39718 <> fact_in_coq
R39722:39724 LF.Imp <> com ind
R39742:39746 LF.Imp <> ::x_';;'_x not
R39732:39736 LF.Imp <> ::x_'::='_x not
R39731:39731 LF.Imp <> Z def
R39737:39739 LF.Imp <> AId constr
R39741:39741 LF.Imp <> X def
R39759:39763 LF.Imp <> ::x_';;'_x not
R39748:39752 LF.Imp <> ::x_'::='_x not
R39747:39747 LF.Imp <> Y def
R39753:39756 LF.Imp <> ANum constr
R39764:39769 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39797:39804 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39868:39873 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39770:39773 LF.Imp <> BNot constr
R39776:39778 LF.Imp <> BEq constr
R39789:39792 LF.Imp <> ANum constr
R39781:39783 LF.Imp <> AId constr
R39785:39785 LF.Imp <> Z def
R39832:39838 LF.Imp <> ::x_';;'_x not
R39806:39810 LF.Imp <> ::x_'::='_x not
R39805:39805 LF.Imp <> Y def
R39811:39815 LF.Imp <> AMult constr
R39826:39828 LF.Imp <> AId constr
R39830:39830 LF.Imp <> Z def
R39818:39820 LF.Imp <> AId constr
R39822:39822 LF.Imp <> Y def
R39840:39844 LF.Imp <> ::x_'::='_x not
R39839:39839 LF.Imp <> Z def
R39845:39850 LF.Imp <> AMinus constr
R39861:39864 LF.Imp <> ANum constr
R39853:39855 LF.Imp <> AId constr
R39857:39857 LF.Imp <> Z def
def 40005:40009 <> plus2
R40013:40015 LF.Imp <> com ind
R40023:40028 LF.Imp <> ::x_'::='_x not
R40051:40051 LF.Imp <> ::x_'::='_x not
R40022:40022 LF.Imp <> X def
R40029:40033 LF.Imp <> APlus constr
R40044:40047 LF.Imp <> ANum constr
R40036:40038 LF.Imp <> AId constr
R40040:40040 LF.Imp <> X def
def 40066:40075 <> XtimesYinZ
R40079:40081 LF.Imp <> com ind
R40089:40094 LF.Imp <> ::x_'::='_x not
R40116:40116 LF.Imp <> ::x_'::='_x not
R40088:40088 LF.Imp <> Z def
R40095:40099 LF.Imp <> AMult constr
R40110:40112 LF.Imp <> AId constr
R40114:40114 LF.Imp <> Y def
R40102:40104 LF.Imp <> AId constr
R40106:40106 LF.Imp <> X def
def 40131:40150 <> subtract_slowly_body
R40154:40156 LF.Imp <> com ind
R40192:40197 LF.Imp <> ::x_';;'_x not
R40164:40168 LF.Imp <> ::x_'::='_x not
R40163:40163 LF.Imp <> Z def
R40169:40174 LF.Imp <> AMinus constr
R40185:40188 LF.Imp <> ANum constr
R40177:40179 LF.Imp <> AId constr
R40181:40181 LF.Imp <> Z def
R40199:40203 LF.Imp <> ::x_'::='_x not
R40198:40198 LF.Imp <> X def
R40204:40209 LF.Imp <> AMinus constr
R40220:40223 LF.Imp <> ANum constr
R40212:40214 LF.Imp <> AId constr
R40216:40216 LF.Imp <> X def
def 40331:40345 <> subtract_slowly
R40349:40351 LF.Imp <> com ind
R40358:40363 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40391:40398 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40419:40424 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40364:40367 LF.Imp <> BNot constr
R40370:40372 LF.Imp <> BEq constr
R40383:40386 LF.Imp <> ANum constr
R40375:40377 LF.Imp <> AId constr
R40379:40379 LF.Imp <> X def
R40399:40418 LF.Imp <> subtract_slowly_body def
def 40439:40462 <> subtract_3_from_5_slowly
R40466:40468 LF.Imp <> com ind
R40487:40492 LF.Imp <> ::x_';;'_x not
R40476:40480 LF.Imp <> ::x_'::='_x not
R40475:40475 LF.Imp <> X def
R40481:40484 LF.Imp <> ANum constr
R40505:40510 LF.Imp <> ::x_';;'_x not
R40494:40498 LF.Imp <> ::x_'::='_x not
R40493:40493 LF.Imp <> Z def
R40499:40502 LF.Imp <> ANum constr
R40511:40525 LF.Imp <> subtract_slowly def
def 40642:40645 <> loop
R40649:40651 LF.Imp <> com ind
R40658:40663 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40669:40676 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40681:40686 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40664:40668 LF.Imp <> BTrue constr
R40677:40680 LF.Imp <> ::'SKIP' not
def 41217:41234 <> ceval_fun_no_while
R41242:41246 LF.Imp <> state def
R41254:41256 LF.Imp <> com ind
R41287:41291 LF.Imp <> state def
R41304:41304 LF.Imp <> c var
R41317:41320 LF.Imp <> ::'SKIP' not
R41333:41334 LF.Imp <> st var
R41343:41347 LF.Imp <> ::x_'::='_x not
R41362:41369 LF.Maps <> t_update def
R41377:41381 LF.Imp <> aeval def
R41383:41384 LF.Imp <> st var
R41371:41372 LF.Imp <> st var
R41398:41401 LF.Imp <> ::x_';;'_x not
R41427:41444 LF.Imp <> ceval_fun_no_while def
R41446:41447 LF.Imp <> st var
R41463:41480 LF.Imp <> ceval_fun_no_while def
R41482:41484 LF.Imp <> st' var
R41495:41498 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41500:41505 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41508:41513 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41516:41518 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41535:41539 LF.Imp <> beval def
R41541:41542 LF.Imp <> st var
R41602:41619 LF.Imp <> ceval_fun_no_while def
R41621:41622 LF.Imp <> st var
R41562:41579 LF.Imp <> ceval_fun_no_while def
R41581:41582 LF.Imp <> st var
R41633:41638 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R41640:41643 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R41645:41648 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R41660:41661 LF.Imp <> st var
ind 45825:45829 <> ceval
constr 45870:45875 <> E_Skip
constr 45916:45920 <> E_Ass
constr 46015:46019 <> E_Seq
constr 46134:46141 <> E_IfTrue
constr 46268:46276 <> E_IfFalse
constr 46404:46415 <> E_WhileFalse
constr 46502:46512 <> E_WhileTrue
R45836:45839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45845:45848 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45854:45857 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45849:45853 LF.Imp <> state def
R45840:45844 LF.Imp <> state def
R45833:45835 LF.Imp <> com ind
R46704:46708 LF.Imp <> ceval var
R45900:45902 LF.Imp <> ::x_'/'_x_'\\'_x not
R45905:45908 LF.Imp <> ::x_'/'_x_'\\'_x not
R45896:45899 LF.Imp <> ::'SKIP' not
R45903:45904 LF.Imp <> st var
R45909:45910 LF.Imp <> st var
R45964:45973 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45974:45974 LF.Imp <> ::x_'/'_x_'\\'_x not
R45983:45986 LF.Imp <> ::x_'/'_x_'\\'_x not
R45989:45993 LF.Imp <> ::x_'/'_x_'\\'_x not
R46009:46009 LF.Imp <> ::x_'/'_x_'\\'_x not
R45976:45980 LF.Imp <> ::x_'::='_x not
R45975:45975 LF.Imp <> x var
R45981:45982 LF.Imp <> a1 var
R45987:45988 LF.Imp <> st var
R45994:46001 LF.Maps <> t_update def
R46008:46008 LF.Imp <> n var
R46006:46006 LF.Imp <> x var
R46003:46004 LF.Imp <> st var
R45960:45962 Coq.Init.Logic <> :type_scope:x_'='_x not
R45949:45953 LF.Imp <> aeval def
R45958:45959 LF.Imp <> a1 var
R45955:45956 LF.Imp <> st var
R45963:45963 LF.Imp <> n var
R46070:46079 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46096:46105 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46106:46106 LF.Imp <> ::x_'/'_x_'\\'_x not
R46115:46118 LF.Imp <> ::x_'/'_x_'\\'_x not
R46121:46124 LF.Imp <> ::x_'/'_x_'\\'_x not
R46109:46112 LF.Imp <> ::x_';;'_x not
R46107:46108 LF.Imp <> c1 var
R46113:46114 LF.Imp <> c2 var
R46119:46120 LF.Imp <> st var
R46125:46128 LF.Imp <> st'' var
R46082:46084 LF.Imp <> ::x_'/'_x_'\\'_x not
R46088:46091 LF.Imp <> ::x_'/'_x_'\\'_x not
R46080:46081 LF.Imp <> c2 var
R46085:46087 LF.Imp <> st' var
R46092:46095 LF.Imp <> st'' var
R46057:46059 LF.Imp <> ::x_'/'_x_'\\'_x not
R46062:46066 LF.Imp <> ::x_'/'_x_'\\'_x not
R46055:46056 LF.Imp <> c1 var
R46060:46061 LF.Imp <> st var
R46067:46069 LF.Imp <> st' var
R46191:46200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46215:46224 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46225:46225 LF.Imp <> ::x_'/'_x_'\\'_x not
R46250:46253 LF.Imp <> ::x_'/'_x_'\\'_x not
R46256:46259 LF.Imp <> ::x_'/'_x_'\\'_x not
R46226:46229 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46231:46236 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46239:46244 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46247:46249 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46230:46230 LF.Imp <> b var
R46237:46238 LF.Imp <> c1 var
R46245:46246 LF.Imp <> c2 var
R46254:46255 LF.Imp <> st var
R46260:46262 LF.Imp <> st' var
R46203:46205 LF.Imp <> ::x_'/'_x_'\\'_x not
R46208:46211 LF.Imp <> ::x_'/'_x_'\\'_x not
R46201:46202 LF.Imp <> c1 var
R46206:46207 LF.Imp <> st var
R46212:46214 LF.Imp <> st' var
R46184:46186 Coq.Init.Logic <> :type_scope:x_'='_x not
R46174:46178 LF.Imp <> beval def
R46183:46183 LF.Imp <> b var
R46180:46181 LF.Imp <> st var
R46187:46190 Coq.Init.Datatypes <> true constr
R46327:46336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46351:46360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46361:46361 LF.Imp <> ::x_'/'_x_'\\'_x not
R46386:46389 LF.Imp <> ::x_'/'_x_'\\'_x not
R46392:46395 LF.Imp <> ::x_'/'_x_'\\'_x not
R46362:46365 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46367:46372 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46375:46380 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46383:46385 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46366:46366 LF.Imp <> b var
R46373:46374 LF.Imp <> c1 var
R46381:46382 LF.Imp <> c2 var
R46390:46391 LF.Imp <> st var
R46396:46398 LF.Imp <> st' var
R46339:46341 LF.Imp <> ::x_'/'_x_'\\'_x not
R46344:46347 LF.Imp <> ::x_'/'_x_'\\'_x not
R46337:46338 LF.Imp <> c2 var
R46342:46343 LF.Imp <> st var
R46348:46350 LF.Imp <> st' var
R46319:46321 Coq.Init.Logic <> :type_scope:x_'='_x not
R46309:46313 LF.Imp <> beval def
R46318:46318 LF.Imp <> b var
R46315:46316 LF.Imp <> st var
R46322:46326 Coq.Init.Datatypes <> false constr
R46458:46467 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46468:46468 LF.Imp <> ::x_'/'_x_'\\'_x not
R46485:46488 LF.Imp <> ::x_'/'_x_'\\'_x not
R46491:46494 LF.Imp <> ::x_'/'_x_'\\'_x not
R46469:46474 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46476:46479 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46481:46484 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46475:46475 LF.Imp <> b var
R46480:46480 LF.Imp <> c var
R46489:46490 LF.Imp <> st var
R46495:46496 LF.Imp <> st var
R46450:46452 Coq.Init.Logic <> :type_scope:x_'='_x not
R46440:46444 LF.Imp <> beval def
R46449:46449 LF.Imp <> b var
R46446:46447 LF.Imp <> st var
R46453:46457 Coq.Init.Datatypes <> false constr
R46563:46572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46586:46595 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46628:46637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46638:46638 LF.Imp <> ::x_'/'_x_'\\'_x not
R46655:46658 LF.Imp <> ::x_'/'_x_'\\'_x not
R46661:46664 LF.Imp <> ::x_'/'_x_'\\'_x not
R46639:46644 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46646:46649 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46651:46654 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46645:46645 LF.Imp <> b var
R46650:46650 LF.Imp <> c var
R46659:46660 LF.Imp <> st var
R46665:46668 LF.Imp <> st'' var
R46596:46596 LF.Imp <> ::x_'/'_x_'\\'_x not
R46613:46616 LF.Imp <> ::x_'/'_x_'\\'_x not
R46620:46623 LF.Imp <> ::x_'/'_x_'\\'_x not
R46597:46602 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46604:46607 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46609:46612 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46603:46603 LF.Imp <> b var
R46608:46608 LF.Imp <> c var
R46617:46619 LF.Imp <> st' var
R46624:46627 LF.Imp <> st'' var
R46574:46576 LF.Imp <> ::x_'/'_x_'\\'_x not
R46579:46582 LF.Imp <> ::x_'/'_x_'\\'_x not
R46573:46573 LF.Imp <> c var
R46577:46578 LF.Imp <> st var
R46583:46585 LF.Imp <> st' var
R46556:46558 Coq.Init.Logic <> :type_scope:x_'='_x not
R46546:46550 LF.Imp <> beval def
R46555:46555 LF.Imp <> b var
R46552:46553 LF.Imp <> st var
R46559:46562 Coq.Init.Datatypes <> true constr
R46704:46708 LF.Imp <> ceval ind
not 46679:46679 <> ::x_'/'_x_'\\'_x
def 46978:46991 <> ceval_example1
R46998:46998 LF.Imp <> ::x_'/'_x_'\\'_x not
R47101:47107 LF.Imp <> ::x_'/'_x_'\\'_x not
R47119:47126 LF.Imp <> ::x_'/'_x_'\\'_x not
R47166:47166 LF.Imp <> ::x_'/'_x_'\\'_x not
R47011:47018 LF.Imp <> ::x_';;'_x not
R47000:47004 LF.Imp <> ::x_'::='_x not
R46999:46999 LF.Imp <> X def
R47005:47008 LF.Imp <> ANum constr
R47019:47022 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47043:47055 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47068:47080 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47093:47100 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47023:47025 LF.Imp <> BLe constr
R47036:47039 LF.Imp <> ANum constr
R47028:47030 LF.Imp <> AId constr
R47032:47032 LF.Imp <> X def
R47057:47061 LF.Imp <> ::x_'::='_x not
R47056:47056 LF.Imp <> Y def
R47062:47065 LF.Imp <> ANum constr
R47082:47086 LF.Imp <> ::x_'::='_x not
R47081:47081 LF.Imp <> Z def
R47087:47090 LF.Imp <> ANum constr
R47108:47118 LF.Imp <> empty_state def
R47127:47134 LF.Maps <> t_update def
R47163:47163 LF.Imp <> Z def
R47137:47144 LF.Maps <> t_update def
R47158:47158 LF.Imp <> X def
R47146:47156 LF.Imp <> empty_state def
R47242:47249 LF.Maps <> t_update def
R47263:47263 LF.Imp <> X def
R47251:47261 LF.Imp <> empty_state def
R47230:47234 LF.Imp <> E_Seq constr
R47242:47249 LF.Maps <> t_update def
R47263:47263 LF.Imp <> X def
R47251:47261 LF.Imp <> empty_state def
R47230:47234 LF.Imp <> E_Seq constr
R47308:47312 LF.Imp <> E_Ass constr
R47308:47312 LF.Imp <> E_Ass constr
R47359:47367 LF.Imp <> E_IfFalse constr
R47359:47367 LF.Imp <> E_IfFalse constr
R47401:47405 LF.Imp <> E_Ass constr
R47401:47405 LF.Imp <> E_Ass constr
def 47484:47497 <> ceval_example2
R47504:47504 LF.Imp <> ::x_'/'_x_'\\'_x not
R47547:47550 LF.Imp <> ::x_'/'_x_'\\'_x not
R47562:47570 LF.Imp <> ::x_'/'_x_'\\'_x not
R47625:47625 LF.Imp <> ::x_'/'_x_'\\'_x not
R47517:47519 LF.Imp <> ::x_';;'_x not
R47506:47510 LF.Imp <> ::x_'::='_x not
R47505:47505 LF.Imp <> X def
R47511:47514 LF.Imp <> ANum constr
R47532:47534 LF.Imp <> ::x_';;'_x not
R47521:47525 LF.Imp <> ::x_'::='_x not
R47520:47520 LF.Imp <> Y def
R47526:47529 LF.Imp <> ANum constr
R47536:47540 LF.Imp <> ::x_'::='_x not
R47535:47535 LF.Imp <> Z def
R47541:47544 LF.Imp <> ANum constr
R47551:47561 LF.Imp <> empty_state def
R47571:47578 LF.Maps <> t_update def
R47622:47622 LF.Imp <> Z def
R47581:47588 LF.Maps <> t_update def
R47617:47617 LF.Imp <> Y def
R47591:47598 LF.Maps <> t_update def
R47612:47612 LF.Imp <> X def
R47600:47610 LF.Imp <> empty_state def
R47648:47652 LF.Imp <> E_Seq constr
R47648:47652 LF.Imp <> E_Seq constr
R47673:47680 LF.Maps <> t_update def
R47694:47694 LF.Imp <> X def
R47682:47692 LF.Imp <> empty_state def
R47661:47665 LF.Imp <> E_Seq constr
R47673:47680 LF.Maps <> t_update def
R47694:47694 LF.Imp <> X def
R47682:47692 LF.Imp <> empty_state def
R47661:47665 LF.Imp <> E_Seq constr
R47710:47714 LF.Imp <> E_Ass constr
R47710:47714 LF.Imp <> E_Ass constr
R47757:47764 LF.Maps <> t_update def
R47793:47793 LF.Imp <> Y def
R47767:47774 LF.Maps <> t_update def
R47788:47788 LF.Imp <> X def
R47776:47786 LF.Imp <> empty_state def
R47745:47749 LF.Imp <> E_Seq constr
R47757:47764 LF.Maps <> t_update def
R47793:47793 LF.Imp <> Y def
R47767:47774 LF.Maps <> t_update def
R47788:47788 LF.Imp <> X def
R47776:47786 LF.Imp <> empty_state def
R47745:47749 LF.Imp <> E_Seq constr
R47813:47817 LF.Imp <> E_Ass constr
R47813:47817 LF.Imp <> E_Ass constr
R47847:47851 LF.Imp <> E_Ass constr
R47847:47851 LF.Imp <> E_Ass constr
def 48176:48183 <> pup_to_n
R48187:48189 LF.Imp <> com ind
R48206:48209 LF.Imp <> ::x_';;'_x not
R48195:48199 LF.Imp <> ::x_'::='_x not
R48194:48194 LF.Imp <> Y def
R48200:48203 LF.Imp <> ANum constr
R48210:48215 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48243:48246 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48307:48310 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48216:48219 LF.Imp <> BNot constr
R48222:48224 LF.Imp <> BEq constr
R48235:48238 LF.Imp <> ANum constr
R48227:48229 LF.Imp <> AId constr
R48231:48231 LF.Imp <> X def
R48274:48277 LF.Imp <> ::x_';;'_x not
R48248:48252 LF.Imp <> ::x_'::='_x not
R48247:48247 LF.Imp <> Y def
R48253:48257 LF.Imp <> APlus constr
R48268:48270 LF.Imp <> AId constr
R48272:48272 LF.Imp <> X def
R48260:48262 LF.Imp <> AId constr
R48264:48264 LF.Imp <> Y def
R48279:48283 LF.Imp <> ::x_'::='_x not
R48278:48278 LF.Imp <> X def
R48284:48289 LF.Imp <> AMinus constr
R48300:48303 LF.Imp <> ANum constr
R48292:48294 LF.Imp <> AId constr
R48296:48296 LF.Imp <> X def
prf 48322:48335 <> pup_to_2_ceval
R48349:48352 LF.Imp <> ::x_'/'_x_'\\'_x not
R48377:48385 LF.Imp <> ::x_'/'_x_'\\'_x not
R48341:48348 LF.Imp <> pup_to_n def
R48353:48360 LF.Maps <> t_update def
R48374:48374 LF.Imp <> X def
R48362:48372 LF.Imp <> empty_state def
R48386:48393 LF.Maps <> t_update def
R48488:48488 LF.Imp <> X def
R48396:48403 LF.Maps <> t_update def
R48483:48483 LF.Imp <> Y def
R48406:48413 LF.Maps <> t_update def
R48478:48478 LF.Imp <> X def
R48416:48423 LF.Maps <> t_update def
R48473:48473 LF.Imp <> Y def
R48426:48433 LF.Maps <> t_update def
R48468:48468 LF.Imp <> Y def
R48436:48443 LF.Maps <> t_update def
R48463:48463 LF.Imp <> X def
R48445:48455 LF.Imp <> empty_state def
R48520:48527 LF.Maps <> t_update def
R48556:48556 LF.Imp <> Y def
R48530:48537 LF.Maps <> t_update def
R48551:48551 LF.Imp <> X def
R48539:48549 LF.Imp <> empty_state def
R48508:48512 LF.Imp <> E_Seq constr
R48520:48527 LF.Maps <> t_update def
R48556:48556 LF.Imp <> Y def
R48530:48537 LF.Maps <> t_update def
R48551:48551 LF.Imp <> X def
R48539:48549 LF.Imp <> empty_state def
R48508:48512 LF.Imp <> E_Seq constr
R48571:48575 LF.Imp <> E_Ass constr
R48571:48575 LF.Imp <> E_Ass constr
R48617:48624 LF.Maps <> t_update def
R48683:48683 LF.Imp <> X def
R48627:48634 LF.Maps <> t_update def
R48678:48678 LF.Imp <> Y def
R48637:48644 LF.Maps <> t_update def
R48673:48673 LF.Imp <> Y def
R48647:48654 LF.Maps <> t_update def
R48668:48668 LF.Imp <> X def
R48656:48666 LF.Imp <> empty_state def
R48599:48609 LF.Imp <> E_WhileTrue constr
R48617:48624 LF.Maps <> t_update def
R48683:48683 LF.Imp <> X def
R48627:48634 LF.Maps <> t_update def
R48678:48678 LF.Imp <> Y def
R48637:48644 LF.Maps <> t_update def
R48673:48673 LF.Imp <> Y def
R48647:48654 LF.Maps <> t_update def
R48668:48668 LF.Imp <> X def
R48656:48666 LF.Imp <> empty_state def
R48599:48609 LF.Imp <> E_WhileTrue constr
R48724:48731 LF.Maps <> t_update def
R48775:48775 LF.Imp <> Y def
R48734:48741 LF.Maps <> t_update def
R48770:48770 LF.Imp <> Y def
R48744:48751 LF.Maps <> t_update def
R48765:48765 LF.Imp <> X def
R48753:48763 LF.Imp <> empty_state def
R48712:48716 LF.Imp <> E_Seq constr
R48724:48731 LF.Maps <> t_update def
R48775:48775 LF.Imp <> Y def
R48734:48741 LF.Maps <> t_update def
R48770:48770 LF.Imp <> Y def
R48744:48751 LF.Maps <> t_update def
R48765:48765 LF.Imp <> X def
R48753:48763 LF.Imp <> empty_state def
R48712:48716 LF.Imp <> E_Seq constr
R48789:48793 LF.Imp <> E_Ass constr
R48789:48793 LF.Imp <> E_Ass constr
R48817:48821 LF.Imp <> E_Ass constr
R48817:48821 LF.Imp <> E_Ass constr
R48863:48870 LF.Maps <> t_update def
R48959:48959 LF.Imp <> X def
R48873:48880 LF.Maps <> t_update def
R48954:48954 LF.Imp <> Y def
R48883:48890 LF.Maps <> t_update def
R48949:48949 LF.Imp <> X def
R48893:48900 LF.Maps <> t_update def
R48944:48944 LF.Imp <> Y def
R48903:48910 LF.Maps <> t_update def
R48939:48939 LF.Imp <> Y def
R48913:48920 LF.Maps <> t_update def
R48934:48934 LF.Imp <> X def
R48922:48932 LF.Imp <> empty_state def
R48845:48855 LF.Imp <> E_WhileTrue constr
R48863:48870 LF.Maps <> t_update def
R48959:48959 LF.Imp <> X def
R48873:48880 LF.Maps <> t_update def
R48954:48954 LF.Imp <> Y def
R48883:48890 LF.Maps <> t_update def
R48949:48949 LF.Imp <> X def
R48893:48900 LF.Maps <> t_update def
R48944:48944 LF.Imp <> Y def
R48903:48910 LF.Maps <> t_update def
R48939:48939 LF.Imp <> Y def
R48913:48920 LF.Maps <> t_update def
R48934:48934 LF.Imp <> X def
R48922:48932 LF.Imp <> empty_state def
R48845:48855 LF.Imp <> E_WhileTrue constr
R49000:49007 LF.Maps <> t_update def
R49081:49081 LF.Imp <> Y def
R49010:49017 LF.Maps <> t_update def
R49076:49076 LF.Imp <> X def
R49020:49027 LF.Maps <> t_update def
R49071:49071 LF.Imp <> Y def
R49030:49037 LF.Maps <> t_update def
R49066:49066 LF.Imp <> Y def
R49040:49047 LF.Maps <> t_update def
R49061:49061 LF.Imp <> X def
R49049:49059 LF.Imp <> empty_state def
R48988:48992 LF.Imp <> E_Seq constr
R49000:49007 LF.Maps <> t_update def
R49081:49081 LF.Imp <> Y def
R49010:49017 LF.Maps <> t_update def
R49076:49076 LF.Imp <> X def
R49020:49027 LF.Maps <> t_update def
R49071:49071 LF.Imp <> Y def
R49030:49037 LF.Maps <> t_update def
R49066:49066 LF.Imp <> Y def
R49040:49047 LF.Maps <> t_update def
R49061:49061 LF.Imp <> X def
R49049:49059 LF.Imp <> empty_state def
R48988:48992 LF.Imp <> E_Seq constr
R49095:49099 LF.Imp <> E_Ass constr
R49095:49099 LF.Imp <> E_Ass constr
R49123:49127 LF.Imp <> E_Ass constr
R49123:49127 LF.Imp <> E_Ass constr
R49151:49162 LF.Imp <> E_WhileFalse constr
R49151:49162 LF.Imp <> E_WhileFalse constr
prf 49863:49881 <> ceval_deterministic
R49923:49932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49946:49954 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49958:49960 Coq.Init.Logic <> :type_scope:x_'='_x not
R49955:49957 LF.Imp <> st1 var
R49961:49963 LF.Imp <> st2 var
R49934:49936 LF.Imp <> ::x_'/'_x_'\\'_x not
R49939:49942 LF.Imp <> ::x_'/'_x_'\\'_x not
R49933:49933 LF.Imp <> c var
R49937:49938 LF.Imp <> st var
R49943:49945 LF.Imp <> st2 var
R49911:49913 LF.Imp <> ::x_'/'_x_'\\'_x not
R49916:49919 LF.Imp <> ::x_'/'_x_'\\'_x not
R49910:49910 LF.Imp <> c var
R49914:49915 LF.Imp <> st var
R49920:49922 LF.Imp <> st1 var
R50183:50185 Coq.Init.Logic <> :type_scope:x_'='_x not
R50183:50185 Coq.Init.Logic <> :type_scope:x_'='_x not
R50954:50956 Coq.Init.Logic <> :type_scope:x_'='_x not
R50954:50956 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 51436:51445 <> plus2_spec
R51476:51481 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51499:51504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51510:51512 Coq.Init.Logic <> :type_scope:x_'='_x not
R51505:51507 LF.Imp <> st' var
R51509:51509 LF.Imp <> X def
R51514:51516 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R51513:51513 LF.Imp <> n var
R51487:51489 LF.Imp <> ::x_'/'_x_'\\'_x not
R51492:51495 LF.Imp <> ::x_'/'_x_'\\'_x not
R51482:51486 LF.Imp <> plus2 def
R51490:51491 LF.Imp <> st var
R51496:51498 LF.Imp <> st' var
R51472:51474 Coq.Init.Logic <> :type_scope:x_'='_x not
R51468:51469 LF.Imp <> st var
R51471:51471 LF.Imp <> X def
R51475:51475 LF.Imp <> n var
R51842:51852 LF.Maps <> t_update_eq thm
R51842:51852 LF.Maps <> t_update_eq thm
prf 52267:52282 <> loop_never_stops
R52303:52304 Coq.Init.Logic <> :type_scope:'~'_x not
R52321:52321 Coq.Init.Logic <> :type_scope:'~'_x not
R52309:52311 LF.Imp <> ::x_'/'_x_'\\'_x not
R52314:52317 LF.Imp <> ::x_'/'_x_'\\'_x not
R52305:52308 LF.Imp <> loop def
R52312:52313 LF.Imp <> st var
R52318:52320 LF.Imp <> st' var
R52362:52365 LF.Imp <> loop def
R52390:52395 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52401:52404 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52409:52412 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52396:52400 LF.Imp <> BTrue constr
R52405:52408 LF.Imp <> ::'SKIP' not
R52390:52395 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52401:52404 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52409:52412 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52396:52400 LF.Imp <> BTrue constr
R52405:52408 LF.Imp <> ::'SKIP' not
def 52887:52895 <> no_whiles
R52902:52904 LF.Imp <> com ind
R52909:52912 Coq.Init.Datatypes <> bool ind
R52925:52925 LF.Imp <> c var
R52936:52939 LF.Imp <> ::'SKIP' not
R52950:52953 Coq.Init.Datatypes <> true constr
R52960:52964 LF.Imp <> ::x_'::='_x not
R52976:52979 Coq.Init.Datatypes <> true constr
R52987:52990 LF.Imp <> ::x_';;'_x not
R53003:53006 Coq.Init.Datatypes <> andb def
R53024:53032 LF.Imp <> no_whiles def
R53009:53017 LF.Imp <> no_whiles def
R53042:53045 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53047:53052 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53055:53060 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53063:53065 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53076:53079 Coq.Init.Datatypes <> andb def
R53097:53105 LF.Imp <> no_whiles def
R53082:53090 LF.Imp <> no_whiles def
R53115:53120 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53122:53125 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53127:53130 LF.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53142:53146 Coq.Init.Datatypes <> false constr
ind 53442:53451 <> no_whilesR
constr 53471:53482 <> nowhile_skip
constr 53504:53514 <> nowhile_ass
constr 53559:53569 <> nowhile_seq
constr 53695:53704 <> nowhile_if
R53457:53460 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53454:53456 LF.Imp <> com ind
R53486:53495 LF.Imp <> no_whilesR ind
R53497:53500 LF.Imp <> ::'SKIP' not
R53533:53542 LF.Imp <> no_whilesR ind
R53547:53551 LF.Imp <> ::x_'::='_x not
R53545:53546 LF.Imp <> id var
R53552:53554 LF.Imp <> val var
R53600:53628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53642:53670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53671:53680 LF.Imp <> no_whilesR ind
R53685:53688 LF.Imp <> ::x_';;'_x not
R53683:53684 LF.Imp <> c1 var
R53689:53690 LF.Imp <> c2 var
R53629:53638 LF.Imp <> no_whilesR ind
R53640:53641 LF.Imp <> c2 var
R53587:53596 LF.Imp <> no_whilesR ind
R53598:53599 LF.Imp <> c1 var
R53737:53764 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53778:53805 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53806:53815 LF.Imp <> no_whilesR ind
R53818:53821 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53823:53828 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53831:53836 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53839:53841 LF.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53822:53822 LF.Imp <> b var
R53829:53830 LF.Imp <> ct var
R53837:53838 LF.Imp <> cf var
R53765:53774 LF.Imp <> no_whilesR ind
R53776:53777 LF.Imp <> cf var
R53724:53733 LF.Imp <> no_whilesR ind
R53735:53736 LF.Imp <> ct var
prf 53855:53867 <> no_whiles_eqv
R53901:53905 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R53894:53896 Coq.Init.Logic <> :type_scope:x_'='_x not
R53883:53891 LF.Imp <> no_whiles def
R53893:53893 LF.Imp <> c var
R53897:53900 Coq.Init.Datatypes <> true constr
R53906:53915 LF.Imp <> no_whilesR ind
R53917:53917 LF.Imp <> c var
R54010:54022 Coq.Bool.Bool <> andb_true_iff thm
R54010:54022 Coq.Bool.Bool <> andb_true_iff thm
R54010:54022 Coq.Bool.Bool <> andb_true_iff thm
R54010:54022 Coq.Bool.Bool <> andb_true_iff thm
R54010:54022 Coq.Bool.Bool <> andb_true_iff thm
R54010:54022 Coq.Bool.Bool <> andb_true_iff thm
ind 56072:56077 <> sinstr
constr 56091:56095 <> SPush
constr 56115:56119 <> SLoad
constr 56138:56142 <> SPlus
constr 56155:56160 <> SMinus
constr 56173:56177 <> SMult
R56102:56105 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56106:56111 LF.Imp <> sinstr ind
R56099:56101 Coq.Init.Datatypes <> nat ind
R56125:56128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56129:56134 LF.Imp <> sinstr ind
R56123:56124 LF.Maps <> id ind
R56146:56151 LF.Imp <> sinstr ind
R56164:56169 LF.Imp <> sinstr ind
R56181:56186 LF.Imp <> sinstr ind
def 56851:56859 <> s_execute
R56867:56871 LF.Imp <> state def
R56883:56886 Coq.Init.Datatypes <> list ind
R56888:56890 Coq.Init.Datatypes <> nat ind
R56920:56923 Coq.Init.Datatypes <> list ind
R56925:56930 LF.Imp <> sinstr ind
R56952:56955 Coq.Init.Datatypes <> list ind
R56957:56959 Coq.Init.Datatypes <> nat ind
def 58056:58065 <> s_execute1
R58141:58146 Coq.Init.Logic <> :type_scope:x_'='_x not
R58074:58082 LF.Imp <> s_execute prfax
R58106:58106 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58114:58115 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58123:58124 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58132:58133 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58140:58140 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58107:58111 LF.Imp <> SPush constr
R58134:58139 LF.Imp <> SMinus constr
R58125:58129 LF.Imp <> SPush constr
R58116:58120 LF.Imp <> SPush constr
R58096:58097 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58084:58094 LF.Imp <> empty_state def
R58147:58147 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58149:58150 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58152:58152 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 58193:58202 <> s_execute2
R58293:58298 Coq.Init.Logic <> :type_scope:x_'='_x not
R58211:58219 LF.Imp <> s_execute prfax
R58261:58261 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58269:58270 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58278:58279 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58285:58286 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58292:58292 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58262:58266 LF.Imp <> SPush constr
R58287:58291 LF.Imp <> SPlus constr
R58280:58284 LF.Imp <> SMult constr
R58271:58275 LF.Imp <> SLoad constr
R58277:58277 LF.Imp <> X def
R58248:58248 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58250:58250 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58252:58252 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58222:58229 LF.Maps <> t_update def
R58243:58243 LF.Imp <> X def
R58231:58241 LF.Imp <> empty_state def
R58299:58299 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58302:58303 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58305:58305 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 58546:58554 <> s_compile
R58561:58564 LF.Imp <> aexp ind
R58569:58572 Coq.Init.Datatypes <> list ind
R58574:58579 LF.Imp <> sinstr ind
def 58746:58755 <> s_compile1
R58814:58818 Coq.Init.Logic <> :type_scope:x_'='_x not
R58763:58771 LF.Imp <> s_compile prfax
R58774:58779 LF.Imp <> AMinus constr
R58790:58794 LF.Imp <> AMult constr
R58806:58808 LF.Imp <> AId constr
R58810:58810 LF.Imp <> Y def
R58797:58800 LF.Imp <> ANum constr
R58782:58784 LF.Imp <> AId constr
R58786:58786 LF.Imp <> X def
R58819:58819 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58827:58828 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58836:58837 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58845:58846 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58852:58853 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58860:58860 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R58820:58824 LF.Imp <> SLoad constr
R58826:58826 LF.Imp <> X def
R58854:58859 LF.Imp <> SMinus constr
R58847:58851 LF.Imp <> SMult constr
R58838:58842 LF.Imp <> SLoad constr
R58844:58844 LF.Imp <> Y def
R58829:58833 LF.Imp <> SPush constr
prf 59581:59597 <> s_compile_correct
R59614:59618 LF.Imp <> state def
R59626:59629 LF.Imp <> aexp ind
R59664:59666 Coq.Init.Logic <> :type_scope:x_'='_x not
R59635:59643 LF.Imp <> s_execute prfax
R59652:59660 LF.Imp <> s_compile prfax
R59662:59662 LF.Imp <> e var
R59648:59649 Coq.Lists.List ListNotations :list_scope:'['_']' not
R59645:59646 LF.Imp <> st var
R59667:59668 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59679:59680 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59669:59673 LF.Imp <> aeval def
R59678:59678 LF.Imp <> e var
R59675:59676 LF.Imp <> st var
mod 60354:60361 <> BreakImp
ind 60703:60705 BreakImp com
constr 60721:60725 BreakImp CSkip
constr 60737:60742 BreakImp CBreak
constr 60782:60785 BreakImp CAss
constr 60811:60814 BreakImp CSeq
constr 60840:60842 BreakImp CIf
constr 60876:60881 BreakImp CWhile
R60729:60731 LF.Imp <> com ind
R60746:60748 LF.Imp <> com ind
R60791:60794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60799:60802 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60803:60805 LF.Imp <> com ind
R60795:60798 LF.Imp <> aexp ind
R60789:60790 LF.Maps <> id ind
R60821:60824 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60828:60831 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60832:60834 LF.Imp <> com ind
R60825:60827 LF.Imp <> com ind
R60818:60820 LF.Imp <> com ind
R60850:60853 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60857:60860 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60864:60867 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60868:60870 LF.Imp <> com ind
R60861:60863 LF.Imp <> com ind
R60854:60856 LF.Imp <> com ind
R60846:60849 LF.Imp <> bexp ind
R60889:60892 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60896:60899 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60900:60902 LF.Imp <> com ind
R60893:60895 LF.Imp <> com ind
R60885:60888 LF.Imp <> bexp ind
R60929:60933 LF.Imp BreakImp CSkip constr
not 60915:60915 BreakImp ::'SKIP'
R60960:60965 LF.Imp BreakImp CBreak constr
not 60945:60945 BreakImp ::'BREAK'
R60995:60998 LF.Imp BreakImp CAss constr
not 60977:60977 BreakImp ::x_'::='_x
R61046:61049 LF.Imp BreakImp CSeq constr
not 61029:61029 BreakImp ::x_';;'_x
R61134:61139 LF.Imp BreakImp CWhile constr
not 61103:61103 BreakImp ::'WHILE'_x_'DO'_x_'END'
R61233:61235 LF.Imp BreakImp CIf constr
not 61191:61191 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 62336:62341 BreakImp result
constr 62357:62365 BreakImp SContinue
constr 62380:62385 BreakImp SBreak
R62369:62374 LF.Imp <> result ind
R62389:62394 LF.Imp <> result ind
ind 64783:64787 BreakImp ceval
constr 64838:64843 BreakImp E_Skip
R64794:64797 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64803:64806 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64813:64816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64822:64825 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64817:64821 LF.Imp <> state def
R64807:64812 LF.Imp BreakImp result ind
R64798:64802 LF.Imp <> state def
R64791:64793 LF.Imp BreakImp com ind
R64954:64958 LF.Imp <> ceval var
R64869:64871 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64874:64877 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64887:64889 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64864:64868 LF.Imp BreakImp CSkip constr
R64872:64873 LF.Imp <> st var
R64878:64886 LF.Imp BreakImp SContinue constr
R64890:64891 LF.Imp <> st var
R64954:64958 LF.Imp BreakImp ceval ind
not 64923:64923 BreakImp ::x_'/'_x_'\\'_x_'/'_x
prf 65057:65068 BreakImp break_ignore
R65123:65131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65134:65136 Coq.Init.Logic <> :type_scope:x_'='_x not
R65132:65133 LF.Imp <> st var
R65137:65139 LF.Imp <> st' var
R65096:65096 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65106:65109 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65112:65115 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65117:65119 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65102:65104 LF.Imp BreakImp ::x_';;'_x not
R65097:65101 LF.Imp BreakImp ::'BREAK' not
R65105:65105 LF.Imp <> c var
R65110:65111 LF.Imp <> st var
R65116:65116 LF.Imp <> s var
R65120:65122 LF.Imp <> st' var
prf 65189:65202 BreakImp while_continue
R65263:65268 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65270:65272 Coq.Init.Logic <> :type_scope:x_'='_x not
R65269:65269 LF.Imp <> s var
R65273:65281 LF.Imp BreakImp SContinue constr
R65229:65229 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65246:65249 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65252:65255 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65257:65259 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65230:65235 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65237:65240 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65242:65245 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65236:65236 LF.Imp <> b var
R65241:65241 LF.Imp <> c var
R65250:65251 LF.Imp <> st var
R65256:65256 LF.Imp <> s var
R65260:65262 LF.Imp <> st' var
prf 65331:65350 BreakImp while_stops_on_break
R65392:65397 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65420:65425 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65426:65426 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65443:65446 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65449:65452 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65462:65464 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65427:65432 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65434:65437 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65439:65442 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65433:65433 LF.Imp <> b var
R65438:65438 LF.Imp <> c var
R65447:65448 LF.Imp <> st var
R65453:65461 LF.Imp BreakImp SContinue constr
R65465:65467 LF.Imp <> st' var
R65399:65401 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65404:65407 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65414:65416 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65398:65398 LF.Imp <> c var
R65402:65403 LF.Imp <> st var
R65408:65413 LF.Imp BreakImp SBreak constr
R65417:65419 LF.Imp <> st' var
R65385:65387 Coq.Init.Logic <> :type_scope:x_'='_x not
R65375:65379 LF.Imp <> beval def
R65384:65384 LF.Imp <> b var
R65381:65382 LF.Imp <> st var
R65388:65391 Coq.Init.Datatypes <> true constr
prf 65597:65612 BreakImp while_break_true
R65679:65684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65703:65708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65709:65715 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R65720:65721 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R65723:65725 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65730:65733 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65740:65742 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65722:65722 LF.Imp <> c var
R65726:65729 LF.Imp <> st'' var
R65734:65739 LF.Imp BreakImp SBreak constr
R65743:65745 LF.Imp <> st' var
R65696:65698 Coq.Init.Logic <> :type_scope:x_'='_x not
R65685:65689 LF.Imp <> beval def
R65695:65695 LF.Imp <> b var
R65691:65693 LF.Imp <> st' var
R65699:65702 Coq.Init.Datatypes <> true constr
R65637:65637 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65654:65657 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65660:65663 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65673:65675 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65638:65643 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65645:65648 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65650:65653 LF.Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65644:65644 LF.Imp <> b var
R65649:65649 LF.Imp <> c var
R65658:65659 LF.Imp <> st var
R65664:65672 LF.Imp BreakImp SContinue constr
R65676:65678 LF.Imp <> st' var
prf 65876:65894 BreakImp ceval_deterministic
R65907:65909 LF.Imp BreakImp com ind
R65953:65962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65981:65989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65999:66002 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R65993:65995 Coq.Init.Logic <> :type_scope:x_'='_x not
R65990:65992 LF.Imp <> st1 var
R65996:65998 LF.Imp <> st2 var
R66005:66007 Coq.Init.Logic <> :type_scope:x_'='_x not
R66003:66004 LF.Imp <> s1 var
R66008:66009 LF.Imp <> s2 var
R65964:65966 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65969:65972 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65975:65977 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65963:65963 LF.Imp <> c var
R65967:65968 LF.Imp <> st var
R65973:65974 LF.Imp <> s2 var
R65978:65980 LF.Imp <> st2 var
R65936:65938 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65941:65944 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65947:65949 LF.Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65935:65935 LF.Imp <> c var
R65939:65940 LF.Imp <> st var
R65945:65946 LF.Imp <> s1 var
R65950:65952 LF.Imp <> st1 var
R66065:66072 LF.Imp BreakImp <> mod
